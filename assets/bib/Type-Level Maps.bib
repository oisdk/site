
@techreport{tarjan_unique_1989,
  title = {Unique {{Binary Search Tree Representations}} and {{Equality}}-Testing of {{Sets}} and {{Sequences}}},
  abstract = {Given an ordered universe U, we study the problem of representing each subset of U by a unique binary search tree so that dictionary operations can be performed efficiently. We exhibit representations that permit the execution of dictionary operations in optimal time when the dictionary is sufficiently sparse
or sufficiently dense. We apply unique representations to obtain efficient data structures for maintaining a collection of sets/sequences under queries that test the equality of a pair of objects. In the process, we devise an interesting method for maintaining a dynamic, sparse array.},
  language = {en},
  number = {TR-267-90},
  url = {https://www.cs.princeton.edu/research/techreps/TR-267-90},
  institution = {{Princeton University}},
  author = {Tarjan, Robert E. and Sundar, Rajamani},
  month = oct,
  year = {1989},
  pages = {15},
  file = {/Users/doisinkidney/Zotero/storage/2V2DGVQ3/267.pdf}
}

@phdthesis{golovin_uniquely_2008,
  address = {Pittsburgh, PA, USA},
  type = {{{PhD Thesis}}},
  title = {Uniquely {{Represented Data Structures}} with {{Applications}} to {{Privacy}}},
  abstract = {In a typical application storing some data, if the memory representations of the internal data structures are inspected, they may leave significant clues to the past use of the application. For example, a data structure with lazy deletions might retain an object that the user believes was deleted long ago; this is problematic in environments requiring high security or strict privacy guarantees. We can eliminate such problems entirely by demanding that a data structure implementation store exactly the information specified by an abstract data type (ADT), and nothing more. This property is sometimes called strong history independence. To attain it, it is often necessary and always sufficient to ensure the data structure is uniquely represented. That is, any two sequences of operations which bring the ADT to the same logical state will cause the implementation to generate the same memory representation. This observation begs the following question. For each abstract data type, what is the added cost for uniquely represented implementations over their conventional counterparts, in terms of time, space, and randomness? In this dissertation, we will answer this question for several important abstract data types, and argue that the overhead for unique representation is sufficiently low to warrant its widespread use in high security and high privacy environments. Towards this end, we provide the theoretical foundation for the development of efficient uniquely represented systems that provably store exactly the information their designs specify, and nothing more.},
  school = {Carnegie Mellon University},
  author = {Golovin, Daniel},
  year = {2008},
  file = {/Users/doisinkidney/Zotero/storage/RMQBGV9J/Golovin - 2008 - Uniquely Represented Data Structures with Applicat.pdf;/Users/doisinkidney/Zotero/storage/VE585VI7/Golovin - 2008 - Uniquely Represented Data Structures with Applicat.pdf}
}

@article{blelloch_uniquely_2008,
  title = {Uniquely Represented Data Structures for Computational Geometry},
  journal = {Algorithm Theory\textendash{}SWAT 2008},
  author = {Blelloch, Guy and Golovin, Daniel and Vassilevska, Virginia},
  year = {2008},
  pages = {17--28},
  file = {/Users/doisinkidney/Zotero/storage/QWF7RHAT/Blelloch et al. - 2008 - Uniquely Represented Data Structures for Computati.pdf;/Users/doisinkidney/Zotero/storage/YYLRVHPQ/Blelloch et al. - 2008 - Uniquely Represented Data Structures for Computati.pdf}
}

@article{andersson_new_1995,
  title = {New {{Tight Bounds}} on {{Uniquely Represented Dictionaries}}},
  volume = {24},
  issn = {0097-5397},
  doi = {10.1137/S0097539792241102},
  abstract = {We present a solution to the dictionary problem, where each subset of size n of an ordered universe is represented by a unique structure containing a (unique) binary search tree. The structure permits the execution of search, insert, and delete operations in \$O(n\^\{1/3\})\$ time in the worst case. We also give a general lower bound, stating that for any unique representation of a set in a graph of bounded out-degree, one of the operations search or update must require a cost of \$$\backslash$Omega(n\^\{1/3\})\$. Therefore, our result sheds new light on previously claimed lower bounds for the unique representation of dictionaries.},
  number = {5},
  urldate = {2018-01-14},
  url = {http://epubs.siam.org/doi/abs/10.1137/S0097539792241102},
  journal = {SIAM Journal on Computing},
  author = {Andersson, A. and Ottmann, T.},
  month = oct,
  year = {1995},
  pages = {1091-1103},
  file = {/Users/doisinkidney/Zotero/storage/QETQ9K4C/S0097539792241102.html}
}

@inproceedings{sundar_unique_1990,
  address = {New York, NY, USA},
  series = {STOC '90},
  title = {Unique {{Binary Search Tree Representations}} and {{Equality}}-Testing of {{Sets}} and {{Sequences}}},
  isbn = {978-0-89791-361-4},
  doi = {10.1145/100216.100219},
  urldate = {2018-01-14},
  url = {http://doi.acm.org/10.1145/100216.100219},
  booktitle = {Proceedings of the {{Twenty}}-Second {{Annual ACM Symposium}} on {{Theory}} of {{Computing}}},
  publisher = {{ACM}},
  author = {Sundar, R. and Tarjan, R. E.},
  year = {1990},
  pages = {18--25},
  file = {/Users/doisinkidney/Zotero/storage/6HCHLXSS/Sundar and Tarjan - 1990 - Unique Binary Search Tree Representations and Equa.pdf}
}


