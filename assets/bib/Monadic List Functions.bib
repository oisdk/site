
@inproceedings{christiansen_all_2016,
	address = {New York, NY, USA},
	series = {{ICFP} 2016},
	title = {All {Sorts} of {Permutations} ({Functional} {Pearl})},
	isbn = {978-1-4503-4219-3},
	url = {http://informatik.uni-kiel.de/~sad/icfp2016-preprint.pdf},
	doi = {10.1145/2951913.2951949},
	abstract = {The combination of non-determinism and sorting is mostly associated with permutation sort, a sorting algorithm that is not very useful for sorting and has an awful running time. In this paper we look at the combination of non-determinism and sorting in a different light: given a sorting function, we apply it to a non-deterministic predicate to gain a function that enumerates permutations of the input list. We get to the bottom of necessary properties of the sorting algorithms and predicates in play as well as discuss variations of the modelled non-determinism. On top of that, we formulate and prove a theorem stating that no matter which sorting function we use, the corresponding permutation function enumerates all permutations of the input list. We use free theorems, which are derived from the type of a function alone, to prove the statement.},
	urldate = {2018-02-10},
	booktitle = {Proceedings of the 21st {ACM} {SIGPLAN} {International} {Conference} on {Functional} {Programming}},
	publisher = {ACM},
	author = {Christiansen, Jan and Danilenko, Nikita and Dylus, Sandra},
	year = {2016},
	keywords = {Haskell, monads, free theorems, non-determinism, permutation, sorting},
	pages = {168--179},
	file = {ACM Full Text PDF:files/3225/Christiansen et al. - 2016 - All Sorts of Permutations (Functional Pearl).pdf:application/pdf}
}