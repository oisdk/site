
@inproceedings{ramsey_stochastic_2002,
	title = {Stochastic {Lambda} {Calculus} and {Monads} of {Probability} {Distributions}},
	volume = {37},
	url = {http://www.cs.tufts.edu/~nr/cs257/archive/norman-ramsey/pmonad.pdf},
	urldate = {2016-09-29},
	booktitle = {29th {ACM} {SIGPLAN}-{SIGACT} symposium on {Principles} of programming languages},
	publisher = {ACM},
	author = {Ramsey, Norman and Pfeffer, Avi},
	year = {2002},
	pages = {154--165},
	file = {[PDF] tufts.edu:/Users/doisinkidney/Documents/zotero/storage/5MFN47A4/Ramsey and Pfeffer - Stochastic Lambda Calculus and Monads of Probabili.pdf:application/pdf}
}

@article{mu_programming_2012,
	title = {Programming from {Galois} connections},
	volume = {81},
	url = {http://www.iis.sinica.edu.tw/~scm/pub/gc-jlap.pdf},
	number = {6},
	urldate = {2016-11-01},
	journal = {Journal of Logic and Algebraic Programming},
	author = {Mu, Shin-Cheng and Oliveira, José Nuno Fonseca},
	year = {2012},
	pages = {680--704},
	file = {[HTML] sciencedirect.com:/Users/doisinkidney/Documents/zotero/storage/3FES9GDK/S1567832612000525.html:text/html;[PDF] psu.edu:/Users/doisinkidney/Documents/zotero/storage/TMNESM34/Mua and Oliveirab - Programming from Galois Connections.pdf:application/pdf;[PDF] sinica.edu.tw:/Users/doisinkidney/Documents/zotero/storage/BSN7ZWTQ/Mua and Oliveirab - Programming from Galois Connections.pdf:application/pdf;[PDF] sinica.edu.tw:/Users/doisinkidney/Documents/zotero/storage/KP24NNPC/Mua and Oliveirab - Programming from Galois Connections.pdf:application/pdf;[PDF] uminho.pt:/Users/doisinkidney/Documents/zotero/storage/9CVSDF8W/Mua and Oliveirab - Programming from Galois Connections.pdf:application/pdf;[PDF] uminho.pt:/Users/doisinkidney/Documents/zotero/storage/C3VP3FGT/Mua and Oliveirab - Programming from Galois Connections.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/5PW4E5QS/24608.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/DFIVUJSJ/bwmeta1.element.html:text/html}
}

@article{yedidia_understanding_2003,
	title = {Understanding belief propagation and its generalizations},
	volume = {8},
	url = {http://www.merl.com/publications/docs/TR2001-22.pdf},
	journal = {Exploring artificial intelligence in the new millennium},
	author = {Yedidia, Jonathan S and Freeman, William T and Weiss, Yair},
	year = {2003},
	pages = {236--239},
	file = {TR2001-22.pdf:/Users/doisinkidney/Documents/zotero/storage/9ETGN75B/TR2001-22.pdf:application/pdf}
}

@misc{piponi_ambiguous_2006,
	title = {The ambiguous operator, pt.2},
	url = {http://blog.sigfpe.com/2006/02/ambiguous-operator-pt2.html},
	abstract = {In 1963 John McCarthy, the inventor of Lisp, published the paper A Basis for a Mathematical Theory of Computation  in which he proposed the ...},
	urldate = {2016-11-06},
	journal = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	month = feb,
	year = {2006},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/I3QZWU4E/ambiguous-operator-pt2.html:text/html}
}

@misc{piponi_why_2006,
	title = {Why isn't {ListT} [] a monad?},
	url = {http://blog.sigfpe.com/2006/11/why-isnt-listt-monad.html},
	abstract = {Well I'm back from my vacation . But this isn't my personal blog so I think it's time to dive right in. Anything to take my mind off these m...},
	urldate = {2016-11-06},
	journal = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	month = dec,
	year = {2006},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/JPVJFKMT/why-isnt-listt-monad.html:text/html}
}

@misc{noauthor_probability_2009,
	title = {Probability monad},
	url = {https://slawekk.wordpress.com/2009/05/31/probability-monad/},
	abstract = {My favourite programming language Haskell has a nice library for doing calculations with probablility distributions, called probability. The library was originally written by Martin Ewig and Steve …},
	urldate = {2016-09-29},
	journal = {Formalized Mathematics},
	month = may,
	year = {2009},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/IRI62MGV/probability-monad.html:text/html}
}

@inproceedings{meertens_algorithmics_1986,
	title = {Algorithmics -- towards programming as a mathematical activity},
	shorttitle = {Algorithmics},
	url = {http://www.kestrel.edu/home/people/meertens/publications/papers/Algorithmics.pdf},
	booktitle = {Proceedings of the {CWI} {Symposium} on {Mathematics} and {Computer} {Science}},
	publisher = {North-Holland},
	author = {Meertens, Lambert},
	year = {1986},
	keywords = {rcb-bibfile},
	pages = {289--334},
	file = {Algorithmics.pdf:/Users/doisinkidney/Documents/zotero/storage/FNEBRKRD/Algorithmics.pdf:application/pdf}
}

@article{bistarelli_semiring-based_1997,
	title = {Semiring-based constraint satisfaction and optimization},
	volume = {44},
	url = {http://dl.acm.org/citation.cfm?id=256306},
	number = {2},
	urldate = {2016-11-01},
	journal = {Journal of the ACM (JACM)},
	author = {Bistarelli, Stefano and Montanari, Ugo and Rossi, Francesca},
	year = {1997},
	pages = {201--236},
	file = {[PDF] psu.edu:/Users/doisinkidney/Documents/zotero/storage/PNDDE954/BISTARELLI et al. - 1997 - Semiring-Based Constraint Satisfaction and Optimiz.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/BXE2SM7G/citation.html:text/html}
}

@inproceedings{green_provenance_2007,
	title = {Provenance {Semirings}},
	url = {http://db.cis.upenn.edu/DL/07/pods07.pdf},
	urldate = {2016-11-01},
	booktitle = {Proceedings of the twenty-sixth {ACM} {SIGMOD}-{SIGACT}-{SIGART} symposium on {Principles} of database systems},
	publisher = {ACM},
	author = {Green, Todd J. and Karvounarakis, Grigoris and Tannen, Val},
	year = {2007},
	pages = {31--40},
	file = {[PDF] upenn.edu:/Users/doisinkidney/Documents/zotero/storage/N7CPZPTZ/Green et al. - 2007 - Provenance Semirings.pdf:application/pdf}
}

@misc{piponi_monad_2009,
	title = {A {Monad} for {Combinatorial} {Search} with {Heuristics}},
	url = {http://blog.sigfpe.com/2009/07/monad-for-combinatorial-search-with.html},
	abstract = {Haskell provides a great way to perform combinatorial searching with backtracking: the list monad. Do-notation provides a nice DSL that make...},
	urldate = {2016-11-06},
	journal = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	month = jul,
	year = {2009},
	keywords = {Backtracking, Combinatorial Search, Haskell},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/9CJJK9SG/monad-for-combinatorial-search-with.html:text/html}
}

@misc{piponi_mother_2008,
	title = {The {Mother} of all {Monads}},
	url = {http://blog.sigfpe.com/2008/12/mother-of-all-monads.html},
	abstract = {Suppose someone stole all the monads but one, which monad would you want it to be? If you're a Haskell programmer you wouldn't be too bother...},
	urldate = {2016-11-10},
	journal = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	month = dec,
	year = {2008},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/G6FCXP5X/mother-of-all-monads.html:text/html}
}

@incollection{bunkenburg_boom_1994,
	series = {Workshops in {Computing}},
	title = {The {Boom} {Hierarchy}},
	copyright = {©1994 British Computer Society},
	isbn = {978-3-540-19879-6 978-1-4471-3236-3},
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.49.3252&rep=rep1&type=pdf},
	abstract = {The Boom Hierarchy is the family of data structures tree, list, bag, set. By combining their properties in other ways, more data structures can be made, like mobiles. The paper defines the data structures of this extended Boom Hierarchy and shows how the functions reduce, map, and filter are applied to them.},
	language = {en},
	urldate = {2016-11-07},
	booktitle = {Functional {Programming}, {Glasgow} 1993},
	publisher = {Springer London},
	author = {Bunkenburg, Alexander},
	editor = {O’Donnell, John T. and Hammond, Kevin},
	year = {1994},
	note = {DOI: 10.1007/978-1-4471-3236-3\_1},
	keywords = {Programming Techniques},
	pages = {1--8},
	file = {10.1.1.49.3252.pdf:/Users/doisinkidney/Documents/zotero/storage/H993N7KW/10.1.1.49.3252.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/6V7TNBIH/10.html:text/html}
}

@article{kiselyov_backtracking_2005,
	title = {Backtracking, interleaving, and terminating monad transformers (functional pearl)},
	volume = {40},
	url = {http://okmij.org/ftp/Computation/monads.html#LogicT},
	number = {9},
	journal = {ACM SIGPLAN Notices},
	author = {Kiselyov, Oleg and Shan, Chung-chieh and Friedman, Daniel P and Sabry, Amr},
	year = {2005},
	keywords = {Backtracking, Haskell, Logic Monad},
	pages = {192--203},
	file = {LogicT.pdf:/Users/doisinkidney/Documents/zotero/storage/5MZ2N74Z/LogicT.pdf:application/pdf}
}

@article{erwig_functional_2006,
	title = {Functional pearls: {Probabilistic} functional programming in {Haskell}},
	volume = {16},
	issn = {1469-7653, 0956-7968},
	shorttitle = {Functional pearls},
	url = {http://web.engr.oregonstate.edu/~erwig/papers/abstracts.html#JFP06a},
	doi = {10.1017/S0956796805005721},
	abstract = {At the heart of functional programming rests the principle of referential transparency, which in particular means that a function f applied to a value x always yields one and the same value y = f(x). This principle seems to be violated when contemplating the use of functions to describe probabilistic events, such as rolling a},
	number = {1},
	urldate = {2016-09-29},
	journal = {Journal of Functional Programming},
	author = {Erwig, Martin and Kollmansberger, Steve},
	year = {2006},
	pages = {21--34},
	file = {PFP_JFP06.pdf:/Users/doisinkidney/Documents/zotero/storage/EQNUDQV6/PFP_JFP06.pdf:application/pdf}
}

@inproceedings{ramsey_stochastic_2002-1,
	title = {Stochastic lambda calculus and monads of probability distributions},
	volume = {37},
	url = {https://www.cs.tufts.edu/~nr/pubs/pmonad.pdf},
	booktitle = {{ACM} {SIGPLAN} {Notices}},
	publisher = {ACM},
	author = {Ramsey, Norman and Pfeffer, Avi},
	year = {2002},
	pages = {154--165},
	file = {pmonad.pdf:/Users/doisinkidney/Documents/zotero/storage/6QFNDPDU/pmonad.pdf:application/pdf}
}

@misc{wu_conditional_2011,
	title = {The {Conditional} {Choice} {Operator}},
	url = {http://zenzike.com/posts/2011-08-01-the-conditional-choice-operator},
	author = {Wu, Nicolas},
	month = aug,
	year = {2011}
}

@book{getoor_introduction_2007,
	address = {Cambridge, Mass},
	series = {Adaptive computation and machine learning},
	title = {Introduction to {Statistical} {Relational} {Learning}},
	isbn = {978-0-262-07288-5},
	url = {http://www.cs.umd.edu/srl-book/},
	language = {en},
	publisher = {MIT Press},
	editor = {Getoor, Lise and Taskar, Ben},
	year = {2007},
	note = {OCLC: ocm80019804},
	keywords = {Computer algorithms, MACHINE LEARNING, Relational databases, Statistical methods}
}

@article{mytkowicz_data-parallel_2014,
	title = {Data-{Parallel} {Finite}-{State} {Machines}},
	url = {https://www.microsoft.com/en-us/research/publication/data-parallel-finite-state-machines/},
	abstract = {A finite-state machine (FSM) is an important abstraction for solving several problems, including regular-expression matching, tokenizing text, and Huffman decoding. FSM computations typically involve data-dependent iterations with unpredictable memory-access patterns making them difficult to parallelize. This paper describes a parallel algorithm for FSMs that breaks dependences across iterations by efficiently enumerating transitions from all possible …},
	urldate = {2016-11-08},
	journal = {Microsoft Research},
	author = {Mytkowicz, Todd and Musuvathi, Madan and Schulte, Wolfram},
	month = mar,
	year = {2014},
	file = {Full Text PDF:/Users/doisinkidney/Documents/zotero/storage/QX6FT889/Mytkowicz et al. - 2014 - Data-Parallel Finite-State Machines.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/IIDWAS6S/data-parallel-finite-state-machines.html:text/html}
}

@phdthesis{goodman_parsing_1998,
	title = {Parsing {Inside}-{Out}},
	url = {https://arxiv.org/abs/cmp-lg/9805007},
	abstract = {The inside-outside probabilities are typically used for reestimating Probabilistic Context Free Grammars (PCFGs), just as the forward-backward probabilities are typically used for reestimating HMMs. I show several novel uses, including improving parser accuracy by matching parsing algorithms to evaluation criteria; speeding up DOP parsing by 500 times; and 30 times faster PCFG thresholding at a given accuracy level. I also give an elegant, state-of-the-art grammar formalism, which can be used to compute inside-outside probabilities; and a parser description formalism, which makes it easy to derive inside-outside formulas and many others.},
	urldate = {2016-11-02},
	school = {Harvard University Cambridge, Massachusetts},
	author = {Goodman, Joshua T.},
	month = may,
	year = {1998},
	file = {[PDF] semanticscholar.org:/Users/doisinkidney/Documents/zotero/storage/ZH5RJUJX/Goodman - 1998 - Parsing Inside-Out.pdf:application/pdf}
}

@misc{piponi_formal_2005,
	title = {Formal {Power} {Series} and {Haskell}},
	url = {http://blog.sigfpe.com/2005/07/formal-power-series-and-haskell.html},
	abstract = {Haskell  is flavour of the month for me right now. Lots of mathematical algorithms that can be quite messy in an imperative language turn ou...},
	urldate = {2016-11-06},
	journal = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	month = jul,
	year = {2005},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/36TBAXWF/formal-power-series-and-haskell.html:text/html}
}

@inproceedings{hinze_deriving_2000,
	title = {Deriving {Backtracking} {Monad} {Transformers}},
	volume = {35},
	url = {https://karczmarczuk.users.greyc.fr/TEACH/Doc/Hinze_back.pdf},
	booktitle = {Proceedings of the {Fifth} {ACM} {SIGPLAN} {International} {Conference} on {Functional} {Programming} ({ICFP}'00), {Montréal}, {Canada}, {September} 18-21, 2000},
	publisher = {ACM},
	author = {Hinze, Ralf},
	year = {2000},
	pages = {186},
	file = {[PDF] greyc.fr:/Users/doisinkidney/Documents/zotero/storage/WGNIBS59/Hinze - 2000 - Deriving Backtracking Monad Transformers.pdf:application/pdf}
}

@inproceedings{kiselyov_embedded_2009,
	title = {Embedded probabilistic programming},
	url = {http://okmij.org/ftp/kakuritu/Hansei.html#derivation},
	booktitle = {Domain-{Specific} {Languages}},
	publisher = {Springer},
	author = {Kiselyov, Oleg and Shan, Chung-Chieh},
	year = {2009},
	pages = {360--384},
	file = {dsl-paper.pdf:/Users/doisinkidney/Documents/zotero/storage/RAAKX9NM/dsl-paper.pdf:application/pdf}
}

@article{milch_blog_2007,
	title = {Blog : {Probabilistic} models with unknown objects},
	shorttitle = {Blog},
	url = {https://people.eecs.berkeley.edu/~russell/papers/ijcai05-blog.pdf},
	abstract = {This paper introduces and illustrates BLOG, a formal language for defining probability models over worlds with unknown objects and identity uncertainty. BLOG unifies and extends several existing approaches. Subject to certain acyclicity constraints, every BLOG model specifies a unique probability distribution over first-order model structures that can contain varying and unbounded numbers of objects. Furthermore, complete inference algorithms exist for a large fragment of the language. We also introduce a probabilistic form of Skolemization for handling evidence. 1},
	author = {Milch, Brian and Marthi, Bhaskara and Russell, Stuart and Sontag, David and Ong, Daniel L. and Kolobov, Andrey},
	year = {2007},
	file = {Citeseer - Full Text PDF:/Users/doisinkidney/Documents/zotero/storage/DU7QBKSH/Milch et al. - 2005 - Blog Probabilistic models with unknown objects.pdf:application/pdf;Citeseer - Snapshot:/Users/doisinkidney/Documents/zotero/storage/GQ5WS2QJ/summary.html:text/html;ijcai05-blog.pdf:/Users/doisinkidney/Documents/zotero/storage/R5W9ZSQH/ijcai05-blog.pdf:application/pdf}
}

@inproceedings{erwig_modeling_2006,
	title = {Modeling {Genome} {Evolution} with a {DSEL} for {Probabilistic} {Programming}},
	url = {http://web.engr.oregonstate.edu/~erwig/papers/GenomeEvolution_PADL06.pdf},
	urldate = {2016-09-29},
	booktitle = {International {Symposium} on {Practical} {Aspects} of {Declarative} {Languages}},
	publisher = {Springer},
	author = {Erwig, Martin and Kollmansberger, Steve},
	year = {2006},
	file = {[PDF] oregonstate.edu:/Users/doisinkidney/Documents/zotero/storage/ZUSAE833/Erwig and Kollmansberger - Modeling Genome Evolution with a DSEL for Probabil.pdf:application/pdf}
}

@article{shan_monads_2002,
	title = {Monads for natural language semantics},
	url = {http://arxiv.org/abs/cs/0205026},
	abstract = {Accounts of semantic phenomena often involve extending types of meanings and revising composition rules at the same time. The concept of monads allows many such accounts -- for intensionality, variable binding, quantification and focus -- to be stated uniformly and compositionally.},
	urldate = {2016-11-01},
	journal = {arXiv:cs/0205026},
	author = {Shan, Chung-chieh},
	month = may,
	year = {2002},
	note = {arXiv: cs/0205026},
	keywords = {Computer Science - Computation and Language, Computer Science - Programming Languages, D.3.1, F.3.2, I.2.7},
	file = {arXiv\:cs/0205026 PDF:/Users/doisinkidney/Documents/zotero/storage/AE9NEUBF/Shan - 2002 - Monads for natural language semantics.pdf:application/pdf;arXiv.org Snapshot:/Users/doisinkidney/Documents/zotero/storage/C496WGX9/0205026.html:text/html}
}

@inproceedings{statman_near_2014,
	title = {Near {Semi}-rings and {Lambda} {Calculus}},
	volume = {8560},
	url = {https://forum.tcs.uj.edu.pl/download.php?id=1713&sid=878ba18481e8017252ff293a128513ef},
	urldate = {2016-11-06},
	booktitle = {Rewriting and {Typed} {Lambda} {Calculi}: {Joint} {International} {Conferences}, {RTA} and {TLCA} 2014, {Held} as {Part} of the {Vienna} {Summer} of {Logic}, {VSL} 2014, {Vienna}, {Austria}, {July} 14-17, 2014, {Proceedings}},
	publisher = {Springer},
	author = {Statman, Rick},
	year = {2014},
	pages = {410},
	file = {statman2014.pdf:/Users/doisinkidney/Documents/zotero/storage/RA3X3QNS/statman2014.pdf:application/pdf}
}

@misc{breitner_showcasing_2016,
	title = {Showcasing {Applicative}},
	url = {http://www.joachim-breitner.de/blog/710-Showcasing_Applicative},
	urldate = {2016-11-16},
	journal = {Joachim Breitner's Blog},
	author = {Breitner, Joachim},
	month = oct,
	year = {2016}
}

@article{maus_rule-based_2010,
	title = {Rule-based multi-level modeling of cell biological systems},
	volume = {5},
	url = {http://europepmc.org/articles/pmc3306009},
	number = {5},
	urldate = {2016-09-29},
	journal = {BMC systems biology},
	author = {Maus, C. and Rybacki, S. and Uhrmacher, A. M.},
	year = {2010},
	pages = {166--166},
	file = {[HTML] biomedcentral.com:/Users/doisinkidney/Documents/zotero/storage/SD7ZKZXG/1752-0509-5-166.html:text/html;[HTML] biomedcentral.com:/Users/doisinkidney/Documents/zotero/storage/UM7NT2F7/1752-0509-5-166.html:text/html;[HTML] springer.com:/Users/doisinkidney/Documents/zotero/storage/6RNFDAAI/1752-0509-5-166.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/7N3TKX2B/PMC3306009.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/9HUSZW3W/bwmeta1.element.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/BAB94NAK/1.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/BD78QNS4/anonymous.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/BVW946HR/10.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/X66MRWTP/22005019.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/ZMP8RQKS/pmc3306009.html:text/html}
}

@article{hirschowitz_modules_2010,
	series = {Special {Issue}: 14th {Workshop} on {Logic}, {Language}, {Information} and {Computation} ({WoLLIC} 2007)},
	title = {Modules over monads and initial semantics},
	volume = {208},
	issn = {0890-5401},
	url = {https://pdfs.semanticscholar.org/3e0c/c79e8cda9246cb954da6fd8aaaa394fecdc3.pdf},
	doi = {10.1016/j.ic.2009.07.003},
	abstract = {Inspired by the classical theory of modules over a monoid, we introduce the natural notion of module over a monad. The associated notion of morphism of left modules (“linear” natural transformations) captures an important property of compatibility with substitution, not only in the so-called homogeneous case but also in the heterogeneous case where “terms” and variables therein could be of different types. In this paper, we present basic constructions of modules and we show how modules allow a new point of view concerning higher-order syntax and semantics.},
	number = {5},
	urldate = {2016-11-07},
	journal = {Information and Computation},
	author = {Hirschowitz, André and Maggesi, Marco},
	month = may,
	year = {2010},
	pages = {545--564},
	file = {1-s2.0-S0890540109002405-main.pdf:/Users/doisinkidney/Documents/zotero/storage/MJ8X6T8H/1-s2.0-S0890540109002405-main.pdf:application/pdf;ScienceDirect Snapshot:/Users/doisinkidney/Documents/zotero/storage/IXJ5NB5U/S0890540109002405.html:text/html}
}

@misc{gilbert_sparse_2013,
	title = {Sparse {Matrices} and {Graphs}: {There} and {Back} {Again}},
	url = {http://www.cs.ucsb.edu/~gilbert/talks/GilbertSimons22oct2013.pdf},
	author = {Gilbert, John},
	month = oct,
	year = {2013},
	file = {GilbertSimons22oct2013.pdf:/Users/doisinkidney/Documents/zotero/storage/9539H7XM/GilbertSimons22oct2013.pdf:application/pdf}
}

@misc{piponi_constraining_2010,
	title = {Constraining {Types} with {Regular} {Expressions}},
	url = {http://blog.sigfpe.com/2010/08/constraining-types-with-regular.html},
	abstract = {Structures with Constraints  Here's a picture of an element of a binary tree type:     The leaves correspond to elements and the letters ind...},
	urldate = {2016-11-06},
	journal = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	month = aug,
	year = {2010},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/XWKTRDJW/constraining-types-with-regular.html:text/html}
}

@incollection{carette_finally_2007,
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Finally {Tagless}, {Partially} {Evaluated}},
	copyright = {©2007 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-540-76636-0 978-3-540-76637-7},
	url = {http://okmij.org/ftp/tagless-final/JFP.pdf},
	abstract = {We have built the first family of tagless interpretations for a higher-order typed object language in a typed metalanguage (Haskell or ML) that require no dependent types, generalized algebraic data types, or postprocessing to eliminate tags. The statically type-preserving interpretations include an evaluator, a compiler (or staged evaluator), a partial evaluator, and call-by-name and call-by-value CPS transformers. Our main idea is to encode HOAS de Bruijn or higher-order abstract syntax using cogen functions rather than data constructors. In other words, we represent object terms not in an initial algebra but using the coalgebraic structure of the λ-calculus. Our representation also simulates inductive maps from types to types, which are required for typed partial evaluation and CPS transformations. Our encoding of an object term abstracts over the various ways to interpret it, yet statically assures that the interpreters never get stuck. To achieve self hyp interpretation and show Jones hyp optimality, we relate this exemplar of higher-rank and higher-kind polymorphism (provided by ML functors and Haskell 98 constructor classes) to plugging a term into a context of let hyp polymorphic bindings.},
	language = {en},
	number = {4807},
	urldate = {2016-11-07},
	booktitle = {Programming {Languages} and {Systems}},
	publisher = {Springer Berlin Heidelberg},
	author = {Carette, Jacques and Kiselyov, Oleg and Shan, Chung-chieh},
	editor = {Shao, Zhong},
	month = nov,
	year = {2007},
	note = {DOI: 10.1007/978-3-540-76637-7\_15},
	keywords = {Logics and Meanings of Programs, Mathematical Logic and Formal Languages, Operating Systems, Programming Languages, Compilers, Interpreters, Programming Techniques, Software Engineering},
	pages = {222--238},
	file = {JFP.pdf:/Users/doisinkidney/Documents/zotero/storage/XZQRG3AC/JFP.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/CVD9MCME/10.html:text/html}
}

@incollection{dechter_bucket_1998,
	title = {Bucket elimination: {A} unifying framework for probabilistic inference},
	url = {http://www.ics.uci.edu/~csp/R48a.pdf},
	booktitle = {Learning in graphical models},
	publisher = {Springer},
	author = {Dechter, Rina},
	year = {1998},
	pages = {75--104},
	file = {R48a.pdf:/Users/doisinkidney/Documents/zotero/storage/A5S6P93S/R48a.pdf:application/pdf}
}

@misc{piponi_more_2009,
	title = {More {Parsing} {With} {Best} {First} {Search}},
	url = {http://blog.sigfpe.com/2009/09/language-nomonomorphismrestrictiongener.html},
	abstract = {{\textgreater} \{-\# LANGUAGE NoMonomorphismRestriction,GeneralizedNewtypeDeriving \#-\}   I have three goals in this post:  1. Refactoring the technique in...},
	urldate = {2016-11-06},
	journal = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	month = sep,
	year = {2009},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/WW6GVWUI/language-nomonomorphismrestrictiongener.html:text/html}
}

@inproceedings{mogensen_troll_2009,
	title = {Troll, a {Language} for {Specifying} {Dice}-{Rolls}},
	url = {http://www.cs.tufts.edu/comp/150PLD/Papers/Troll.pdf},
	urldate = {2016-09-30},
	booktitle = {Proceedings of the 2009 {Acm} {Symposium} on {Applied} {Computing}},
	publisher = {Association for Computing Machinery},
	author = {Mogensen, Torben Ægidius},
	year = {2009},
	file = {[PDF] tufts.edu:/Users/doisinkidney/Documents/zotero/storage/RA4ARS42/Mogensen - 2009 - Troll, a Language for Specifying Dice-Rolls.pdf:application/pdf}
}

@incollection{droste_semirings_2009,
	address = {Berlin, Heidelberg},
	series = {Monographs in {Theoretical} {Computer} {Science}. {An} {EATCS} {Series}},
	title = {Semirings and {Formal} {Power} {Series}},
	volume = {1},
	copyright = {©2009 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-642-01491-8 978-3-642-01492-5},
	url = {http://staff.mmcs.sfedu.ru/~ulysses/Edu/Marktoberdorf_2009/working_material/Esparsa/Kuich.%20Semirings%20and%20FPS.pdf},
	abstract = {This chapter presents basic foundations for the theory of weighted automata: semirings and formal power series. A fundamental question is how to extend the star operation (Kleene iteration) from languages to series. For this, we investigate ordered, complete and continuous semirings and the related concepts of star semirings and Conway semirings. We derive natural properties for the Kleene star of cycle-free series and also of matrices often used to analyze the behavior of weighted automata. Finally, we investigate cycle-free linear equations which provide a useful tool for proving identities for formal power series.},
	language = {en},
	urldate = {2016-10-31},
	booktitle = {Handbook of {Weighted} {Automata}},
	publisher = {Springer Berlin Heidelberg},
	author = {Droste, Manfred and Kuich, Werner},
	editor = {Droste, Manfred and Kuich, Werner and Vogler, Heiko},
	year = {2009},
	note = {DOI: 10.1007/978-3-642-01492-5\_1},
	keywords = {Computation by Abstract Devices, Language Translation and Linguistics, Logics and Meanings of Programs, Mathematical Logic and Formal Languages, Mathematical Logic and Foundations, Theory of Computation},
	pages = {3--28},
	file = {[PDF] sfedu.ru:/Users/doisinkidney/Documents/zotero/storage/B2CHSEQ2/Droste and Kuich - Semirings and Formal Power Series.pdf:application/pdf}
}

@book{golan_semirings_1999,
	title = {Semirings and their {Applications}},
	url = {https://books.google.nl/books?hl=en&lr=&id=DNdTF_4PzpoC&oi=fnd&pg=PA1&ots=NJkLYAMVwu&sig=1yaUSRx1QpxfvKSEIXllAffGo3c},
	urldate = {2016-11-03},
	publisher = {Springer Science \& Business Media},
	author = {Golan, Jonathan S.},
	year = {1999},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/7RV9NBU4/10.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/A5SV4UZI/undermaintenance.kfupm.edu.sa.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/BEDJGT3A/10.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/DVTQTHEW/127907130.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/IQATSKPX/books.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/NBD6UTTG/books.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/PPT8I8X2/1620618.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/Q959FKV8/MATH695_132_01_S1.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/VRHWH5I6/127907130.pdf:application/pdf}
}

@article{kohlas_generic_2012,
	title = {Generic local computation},
	volume = {78},
	number = {1},
	journal = {Journal of Computer and System Sciences},
	author = {Kohlas, Jürg and Pouly, Marc and Schneuwly, Cesar},
	year = {2012},
	pages = {348--369},
	file = {poulyschneuwlykohlas11.pdf:/Users/doisinkidney/Documents/zotero/storage/MJET5RZI/poulyschneuwlykohlas11.pdf:application/pdf}
}

@misc{piponi_monads_2007,
	title = {Monads for vector spaces, probability and quantum mechanics pt. {I}},
	url = {http://blog.sigfpe.com/2007/02/monads-for-vector-spaces-probability.html},
	abstract = {I've been enjoying Eric Kidd's articles  on probability theory with Haskell. So I thought I'd follow them up with two things: (1) finding th...},
	urldate = {2016-11-06},
	journal = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	month = feb,
	year = {2007},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/ZHHMUJIB/monads-for-vector-spaces-probability.html:text/html}
}

@article{kimmig_implementation_2011,
	title = {On the implementation of the probabilistic logic programming language {ProbLog}},
	volume = {11},
	issn = {1475-3081, 1471-0684},
	url = {https://lirias.kuleuven.be/bitstream/123456789/259607/1/kimmig10.pdf},
	doi = {10.1017/S1471068410000566},
	abstract = {The past few years have seen a surge of interest in the field of probabilistic logic learning and statistical relational learning. In this endeavor, many probabilistic logics have been developed. ProbLog is a recent probabilistic extension of Prolog motivated by the mining of large biological networks. In ProbLog, facts can be labeled with probabilities. These facts are treated as mutually independent random variables that indicate whether these facts belong to a randomly sampled program. Different kinds of queries can be posed to ProbLog programs. We introduce algorithms that allow the efficient execution of these queries, discuss their implementation on top of the YAP-Prolog system, and evaluate their performance in the context of large networks of biological entities.},
	number = {2-3},
	urldate = {2016-12-05},
	journal = {Theory and Practice of Logic Programming},
	author = {Kimmig, Angelika and Demoen, Bart and Raedt, Luc De and Costa, Vítor Santos and Rocha, Ricardo},
	month = mar,
	year = {2011},
	keywords = {Exact and approximative inference, Implementation, Probabilistic logic programming},
	pages = {235--262},
	file = {kimmig10.pdf:/Users/doisinkidney/Documents/zotero/storage/6R4F4HUV/kimmig10.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/W6UI2WPV/21037609B99F5DC8033DDF56D07BF839.html:text/html}
}

@misc{kmett_comment_2015,
	type = {comment},
	title = {Comment on: {From} monoids to near-semirings: the essence of {MonadPlus} and {Alternative} • /r/haskell},
	url = {https://www.reddit.com/r/haskell/comments/3dlz6b/from_monoids_to_nearsemirings_the_essence_of/ct6mr0g/},
	abstract = {The problem is that roughly half of the instances we have for MonadPlus and Alternative today do not satisfy the oidification of the right-seminearring laws mentioned here.
There are really two or more families of MonadPlus instances. There are those satisfying "left catch" and those with "left distribution" -- some satisfy both.
Maybe, IO, and almost anything that doesn't use a list or other source of non-determinism fails these law and fails them badly.
Most monad transformers preserve the "sense" of what MonadPlus law they inherit from the base monad, but then things like EitherT e, or variations on ListT change the meaning of ({\textless}{\textbar}{\textgreater})
It gets worse when you move to Applicative vs. Alternative, because then things like Backwards[1] have a right unit instead of a left one, and the extra structure afforded by Applicative makes the type enforced left unit law we had in MonadPlus becomes an arbitrary imposition, even less likely to hold as we can see with Backwards. =(
So this is definitely the essence of something nice to have, it just isn't the essence of the MonadPlus or Alternative classes we have today.},
	urldate = {2016-11-06},
	journal = {reddit},
	author = {Kmett, Edward},
	month = jul,
	year = {2015},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/KTBDZIV7/ct6mr0g.html:text/html}
}

@incollection{hutchison_typed_2012,
	address = {Berlin, Heidelberg},
	title = {Typed {Tagless} {Final} {Interpreters}},
	volume = {7470},
	isbn = {978-3-642-32201-3 978-3-642-32202-0},
	url = {http://okmij.org/ftp/tagless-final/course/lecture.pdf},
	abstract = {The so-called `typed tagless final' approach of Carette et al. has collected and polished a number of techniques for representing typed higher-order languages in a typed metalanguage, along with type-preserving interpretation, compilation and partial evaluation. The approach is an alternative to the traditional, or `initial' encoding of an object language as a (generalized) algebraic data type. Both approaches permit multiple interpretations of an expression, to evaluate it, pretty-print, etc. The final encoding represents all and only typed object terms without resorting to generalized algebraic data types, dependent or other fancy types. The final encoding lets us add new language forms and interpretations without breaking the existing terms and interpreters.},
	urldate = {2016-11-07},
	booktitle = {Generic and {Indexed} {Programming}},
	publisher = {Springer Berlin Heidelberg},
	author = {Kiselyov, Oleg},
	editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard and Gibbons, Jeremy},
	year = {2012},
	pages = {130--174},
	file = {lecture.pdf:/Users/doisinkidney/Documents/zotero/storage/SRNZVHJS/lecture.pdf:application/pdf}
}

@inproceedings{fischer_reinventing_2009,
	title = {Reinventing {Haskell} {Backtracking}},
	url = {http://www-ps.informatik.uni-kiel.de/~sebf/data/pub/atps09.pdf},
	abstract = {Almost ten years ago, Ralf Hinze has written a functional pearl on how to derive backtracking functionality for the purely functional programming language Haskell. In these notes, we show how to arrive at the efficient, two-continuation based backtracking monad derived by Hinze starting from an intuitive inefficient implementation that we subsequently refine using well known program transformations.
It turns out that the technique can be used to build monads for non-determinism from modular, independent parts which gives rise to various new implementations. Specifically, we show how the presented approach can be applied to obtain new implementations of breadth-first search and iterative deepening depth-first search.},
	booktitle = {Informatik 2009, {Im} {Fokus} das {Leben} ({ATPS}'09)},
	publisher = {GI Edition},
	author = {Fischer, Sebastian},
	year = {2009},
	file = {atps09.pdf:/Users/doisinkidney/Documents/zotero/storage/CDX7PKZ3/atps09.pdf:application/pdf}
}

@misc{doel_free_2015,
	title = {Free {Monoids} in {Haskell}},
	url = {http://comonad.com/reader/2015/free-monoids-in-haskell/},
	urldate = {2016-11-07},
	journal = {The Comonad.Reader},
	author = {Doel, Dan},
	month = feb,
	year = {2015},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/GJNZRTTA/free-monoids-in-haskell.html:text/html}
}

@misc{piponi_fast_2009,
	title = {Fast incremental regular expression matching with monoids},
	url = {http://blog.sigfpe.com/2009/01/fast-incremental-regular-expression.html},
	abstract = {The Problem   Consider this problem: Fix a regular expression R. Suppose you have a string of length N. There's not much you can do about it...},
	urldate = {2016-11-06},
	journal = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	year = {2009},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/UTSM6KMN/fast-incremental-regular-expression.html:text/html}
}

@inproceedings{dolan_fun_2013,
	title = {Fun with semirings: a functional pearl on the abuse of linear algebra},
	volume = {48},
	isbn = {978-1-4503-2326-0},
	shorttitle = {Fun with semirings},
	url = {https://www.cl.cam.ac.uk/~sd601/papers/semirings.pdf},
	doi = {10.1145/2500365.2500613},
	language = {en},
	urldate = {2016-11-23},
	publisher = {ACM Press},
	author = {Dolan, Stephen},
	year = {2013},
	pages = {101},
	file = {[PDF] cam.ac.uk:/Users/doisinkidney/Documents/zotero/storage/EUN94HUM/Dolan - Fun with Semirings.pdf:application/pdf}
}

@misc{piponi_monads_2007-1,
	title = {Monads, {Vector} {Spaces} and {Quantum} {Mechanics} pt. {II}},
	url = {http://blog.sigfpe.com/2007/03/monads-vector-spaces-and-quantum.html},
	abstract = {Back from wordpress.com:  I had originally intended to write some code to simulate quantum computers and implement some quantum algorithms. ...},
	urldate = {2016-11-06},
	journal = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	month = mar,
	year = {2007},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/Z7FZ554V/monads-vector-spaces-and-quantum.html:text/html}
}

@unpublished{larsen_memory_2011,
	title = {Memory {Efficient} {Implementation} of {Probability} {Monads}},
	url = {http://www.diku.dk/~kflarsen/t/ProbMonad-unpublished.pdf},
	urldate = {2016-09-29},
	author = {Larsen, Ken Friis},
	month = aug,
	year = {2011},
	file = {[PDF] diku.dk:/Users/doisinkidney/Documents/zotero/storage/EV8MW88P/Larsen - Memory efficient implementation of probability mon.pdf:application/pdf}
}

@misc{freeman_purescript-distributions_2016,
	title = {purescript-distributions},
	url = {https://pursuit.purescript.org/packages/purescript-distributions/},
	author = {Freeman, Phil},
	month = jun,
	year = {2016}
}

@article{goodman_semiring_1999,
	title = {Semiring {Parsing}},
	volume = {25},
	url = {https://pdfs.semanticscholar.org/277b/475e46c2c4dd8e1d1420318472371af82888.pdf},
	number = {4},
	urldate = {2016-11-02},
	journal = {Computational Linguistics},
	author = {Goodman, Joshua},
	year = {1999},
	pages = {573--605},
	file = {[PDF] semanticscholar.org:/Users/doisinkidney/Documents/zotero/storage/HBF9Q8A5/Goodman - Semiring Parsing.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/KVJP8F9R/research.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/M7PWXU2P/cat.inist.fr.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/VK4ZF4RE/citation.html:text/html}
}

@article{boom_further_1981,
	title = {Further thoughts on {Abstracto}},
	url = {http://www.kestrel.edu/home/people/meertens/publications/papers/Abstracto_reader.pdf},
	journal = {Working Paper ELC-9, IFIP WG 2.1},
	author = {Boom, H. J.},
	year = {1981},
	file = {Abstracto_reader.pdf:/Users/doisinkidney/Documents/zotero/storage/V89FEISE/Abstracto_reader.pdf:application/pdf}
}

@article{jacobs_categorical_2016,
	title = {A {Categorical} {Basis} for {Conditional} {Probability}},
	url = {http://www.cs.ru.nl/B.Jacobs/PAPERS/cat-prob-th.pdf},
	urldate = {2016-09-29},
	author = {Jacobs, Bart},
	year = {2016},
	keywords = {Category Theory, Probability},
	file = {[PDF] ru.nl:/Users/doisinkidney/Documents/zotero/storage/M3AHBKUJ/Jacobs - 2016 - A Categorical Basis for Conditional Probability.pdf:application/pdf}
}

@incollection{domingos_markov_2007,
	address = {Cambridge, Mass},
	title = {Markov {Logic}: {A} {Unifying} {Framework} for {Statistical} {Relational} {Learning}},
	isbn = {978-0-262-07288-5},
	booktitle = {Statistical {Relational} {Learning}},
	publisher = {MIT Press},
	author = {Domingos, Pedro and Richardson, Matthew},
	editor = {Getoor, Lise and Taskar, Ben},
	year = {2007},
	pages = {339}
}

@misc{kmett_free_2011,
	title = {Free {Monads} for {Less} ({Part} 2 of 3): {Yoneda}},
	url = {http://comonad.com/reader/2011/free-monads-for-less-2/},
	urldate = {2016-11-10},
	journal = {The Comonad.Reader},
	author = {Kmett, Edward},
	month = jun,
	year = {2011},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/4KHF6Z6M/free-monads-for-less-2.html:text/html}
}

@inproceedings{okasaki_fast_1999,
	title = {From {Fast} {Exponentiation} to {Square} {Matrices}: {An} {Adventure} in {Types}},
	volume = {34},
	shorttitle = {From {Fast} {Exponentiation} to {Square} {Matrices}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.456.357&rep=rep1&type=pdf},
	booktitle = {Proceedings of the {ACM} {SIGPLAN} {International} {Conference} on {Functional} {Programming} ({ICFP}'99), {Paris}, {France}, {September} 27-29, 1999},
	publisher = {ACM},
	author = {Okasaki, Chris},
	year = {1999},
	keywords = {Data Structures, Haskell, Nested Types},
	pages = {28},
	file = {[PDF] from psu.edu:/Users/doisinkidney/Documents/zotero/storage/CJ887PD9/Okasaki - From Fast Exponentiation to Square Matrices An Ad.pdf:application/pdf;[PDF] from usma.edu:/Users/doisinkidney/Documents/zotero/storage/3UGGUBQ5/Okasaki - From Fast Exponentiation to Square Matrices An Ad.pdf:application/pdf;[PDF] from westpoint.edu:/Users/doisinkidney/Documents/zotero/storage/KUNSVH7E/Okasaki - From Fast Exponentiation to Square Matrices An Ad.pdf:application/pdf;[PDF] psu.edu:/Users/doisinkidney/Documents/zotero/storage/FUDZMXJC/Okasaki - From Fast Exponentiation to Square Matrices An Ad.pdf:application/pdf;[PDF] semanticscholar.org:/Users/doisinkidney/Documents/zotero/storage/CWBHZ7ZJ/Okasaki - From Fast Exponentiation to Square Matrices An Ad.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/7PAEM9RB/citation.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/BE6HVENT/summary.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/EK75C6D7/cat.inist.fr.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/PQFC4TKW/cat.inist.fr.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/TPVFFHR9/cat.inist.fr.html:text/html}
}

@misc{kidd_refactoring_2007,
	title = {Refactoring probability distributions, part 1: {PerhapsT}},
	url = {http://www.randomhacks.net/2007/02/21/refactoring-probability-distributions/},
	urldate = {2016-11-06},
	journal = {Random Hacks},
	author = {Kidd, Eric},
	month = feb,
	year = {2007}
}

@unpublished{kidd_build_2007,
	title = {Build your own probability monads},
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.129.9502&rep=rep1&type=pdf},
	urldate = {2016-09-29},
	author = {Kidd, Eric},
	month = oct,
	year = {2007},
	file = {[PDF] psu.edu:/Users/doisinkidney/Documents/zotero/storage/UGIJ3GZ9/Kidd - Build your own probability monads.pdf:application/pdf}
}

@misc{yorgey_network_2016,
	title = {The network reliability problem},
	url = {https://byorgey.wordpress.com/2016/02/19/the-network-reliability-problem/},
	abstract = {Let \$latex G = (V,E)\$ be a directed graph with vertices \$latex V\$ and edges \$latex E\$. Multiple edges between the same pair of vertices are allowed. For concreteness’ sake, think of the vertices as…},
	urldate = {2016-11-06},
	journal = {blog :: Brent -{\textgreater} [String]},
	author = {Yorgey, Brent},
	month = feb,
	year = {2016},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/JQIIGM8I/the-network-reliability-problem.html:text/html}
}

@article{dasgupta_anytime_2016,
	title = {Anytime {Inference} in {Valuation} {Algebras}},
	url = {https://arxiv.org/abs/1605.04218},
	journal = {arXiv preprint arXiv:1605.04218},
	author = {Dasgupta, Abhishek and Abramsky, Samson},
	year = {2016},
	file = {1605.04218v1.pdf:/Users/doisinkidney/Documents/zotero/storage/GQV4V9IR/1605.04218v1.pdf:application/pdf}
}

@misc{kmett_modules_2011,
	title = {Modules and {Functional} {Linear} {Functionals}},
	url = {http://comonad.com/reader/2011/free-modules-and-functional-linear-functionals/},
	urldate = {2016-11-06},
	journal = {The Comonad.Reader},
	author = {Kmett, Edward},
	month = jul,
	year = {2011},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/HQJATPFS/free-modules-and-functional-linear-functionals.html:text/html}
}

@inproceedings{bistarelli_semiring-based_2001,
	title = {Semiring-{Based} {Constraint} {Logic} {Programming}: {Syntax} and {Semantics}},
	volume = {23},
	shorttitle = {Semiring-based constraint logic programming},
	url = {http://www.academia.edu/download/34297968/toplas.pdf},
	urldate = {2016-11-01},
	booktitle = {{ACM} {Transactions} on {Programming} {Languages} and {Systems} ({TOPLAS})},
	publisher = {Citeseer},
	author = {Bistarelli, Stefano and Montanari, Ugo and Rossi, Francesca},
	year = {2001},
	pages = {1--29},
	file = {[PDF] emu.edu.tr:/Users/doisinkidney/Documents/zotero/storage/P8XQQA24/BISTARELLI et al. - 2001 - Semiring-Based Constraint Logic Programming Synta.pdf:application/pdf}
}

@phdthesis{radul_propagation_2009,
	type = {Thesis},
	title = {Propagation networks: {A} flexible and expressive substrate for computation},
	url = {https://dspace.mit.edu/handle/1721.1/54635},
	abstract = {In this dissertation I propose a shift in the foundations of computation. Modern programming systems are not expressive enough. The traditional image of a single computer that has global effects on a large memory is too restrictive. The propa- gation paradigm replaces this with computing by networks of local, independent, stateless machines interconnected with stateful storage cells. In so doing, it offers great flexibility and expressive power, and has therefore been much studied, but has not yet been tamed for general-purpose computation. The novel insight that should finally permit computing with general-purpose propagation is that a cell should not be seen as storing a value, but as accumulating information about a value.
Various forms of the general idea of propagation have been used with great success for various special purposes; perhaps the most immediate example is con- straint propagation in constraint satisfaction systems. This success is evidence both that traditional linear computation is not expressive enough, and that propagation is more expressive. These special-purpose systems, however, are all complex and all different, and neither compose well, nor interoperate well, nor generalize well. A foundational layer is missing.
I present in this dissertation the design and implementation of a prototype general-purpose propagation system. I argue that the structure of the prototype follows from the overarching principle of computing by propagation and of storage by accumulating information—there are no important arbitrary decisions. I illus- trate on several worked examples how the resulting organization supports arbitrary computation; recovers the expressivity benefits that have been derived from special- purpose propagation systems in a single general-purpose framework, allowing them to compose and interoperate; and offers further expressive power beyond what we have known in the past. I reflect on the new light the propagation perspective sheds on the deep nature of computation.},
	language = {en},
	school = {Massachusets Institute of Technology},
	author = {Radul, Alexey},
	year = {2009},
	file = {phd-thesis.pdf:/Users/doisinkidney/Documents/zotero/storage/CZJ62XFF/phd-thesis.pdf:application/pdf}
}

@book{pouly_generic_2012,
	title = {Generic {Inference}: {A} {Unifying} {Theory} for {Automated} {Reasoning}},
	publisher = {John Wiley \& Sons},
	author = {Pouly, Marc and Kohlas, Jürg},
	year = {2012}
}

@misc{oconnor_very_2011,
	title = {A {Very} {General} {Method} of {Computing} {Shortest} {Paths}},
	url = {http://r6.ca/blog/20110808T035622Z.html},
	journal = {Russell O'Connor's Blog},
	author = {O'Connor, Russell},
	month = aug,
	year = {2011},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/HTKWUCH4/20110808T035622Z.html:text/html}
}

@inproceedings{pfeffer_ibal_2001,
	title = {{IBAL} : {A} probabilistic rational programming language},
	url = {http://gelberpfeffer.net/Papers/ibal.ijcai01.ps},
	booktitle = {{IJCAI}},
	publisher = {Citeseer},
	author = {Pfeffer, Avi},
	year = {2001},
	pages = {733--740},
	file = {ibal.ijcai01.ps:/Users/doisinkidney/Documents/zotero/storage/ZE47DRW8/ibal.ijcai01.ps:application/postscript}
}

@book{glazek_guide_2013,
	title = {A {Guide} to the {Literature} on {Semirings} and their {Applications} in {Mathematics} and {Information} {Sciences}: {With} {Complete} {Bibliography}},
	shorttitle = {A {Guide} to the {Literature} on {Semirings} and their {Applications} in {Mathematics} and {Information} {Sciences}},
	url = {https://books.google.nl/books?hl=en&lr=&id=dk3qCAAAQBAJ&oi=fnd&pg=PA2&ots=NhSkrJWf2_&sig=3A3ntVxl4_aIEUJIntZMb7cNQxY},
	urldate = {2016-11-03},
	publisher = {Springer Science \& Business Media},
	author = {Glazek, K.},
	year = {2013},
	keywords = {Semirings},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/CVNU8VXG/books.html:text/html}
}

@misc{dominus_short_2010,
	title = {A short bibliography of probability monads},
	shorttitle = {The {Universe} of {Discourse}},
	url = {http://blog.plover.com/prog/haskell/probmonad-refs.html},
	urldate = {2016-09-29},
	journal = {The Universe of Discourse},
	author = {Dominus, Mark},
	month = jan,
	year = {2010},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/RVIRV675/probmonad-refs.html:text/html}
}

@article{mcbride_applicative_2008,
	title = {Applicative programming with effects},
	volume = {18},
	url = {http://strictlypositive.org/Idiom.pdf},
	number = {01},
	urldate = {2016-10-04},
	journal = {Journal of functional programming},
	author = {McBride, Conor and Paterson, Ross},
	year = {2008},
	keywords = {Applicative Functors, Haskell},
	pages = {1--13},
	file = {Applicative.pdf:/Users/doisinkidney/Documents/zotero/storage/QXKBISRB/Applicative.pdf:application/pdf}
}

@inproceedings{rivas_monoids_2015,
	title = {From monoids to near-semirings: the essence of {MonadPlus} and {Alternative}},
	isbn = {978-1-4503-3516-4},
	shorttitle = {From monoids to near-semirings},
	url = {http://www.fceia.unr.edu.ar/~mauro/pubs/FromMonoidstoNearsemirings.pdf},
	doi = {10.1145/2790449.2790514},
	abstract = {It is well-known that monads are monoids in the category of endo-functors, and in fact so are applicative functors. Unfortunately, the benefits of this unified view are lost when the additional non-determinism structure of {\textbar}MonadPlus{\textbar} or {\textbar}Alternative{\textbar} is required.

This article recovers the essence of these two type classes by extending monoids to near-semirings with both additive and multiplicative structure. This unified algebraic view enables us to generically define the free construction as well as a novel double Cayley representation that optimises both left-nested sums and left-nested products.},
	language = {en},
	urldate = {2016-11-23},
	booktitle = {Proceedings of the 17th {International} {Symposium} on {Principles} and {Practice} of {Declarative} {Programming}},
	publisher = {ACM},
	author = {Rivas, Exequiel and Jaskelioff, Mauro and Schrijvers, Tom},
	year = {2015},
	note = {https://www.reddit.com/r/haskell/comments/3dlz6b/from\_monoids\_to\_nearsemirings\_the\_essence\_of/?},
	pages = {196--207},
	file = {[PDF] unr.edu.ar:/Users/doisinkidney/Documents/zotero/storage/TQ2SUXE7/Rivas et al. - From monoids to near-semirings the essence of Mon.pdf:application/pdf}
}

@misc{dominus_monad_2009,
	title = {A monad for probability and provenance},
	shorttitle = {The {Universe} of {Discourse}},
	url = {http://blog.plover.com/prog/haskell/probmonad.html},
	urldate = {2016-09-29},
	journal = {The Universe of Discourse},
	author = {Dominus, Mark},
	month = dec,
	year = {2009},
	keywords = {Haskell, Probability},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/AWNNNGV4/probmonad.html:text/html}
}

@article{waldmann_efficient_2016,
	title = {Efficient {Completion} of {Weighted} {Automata}},
	url = {https://arxiv.org/abs/1609.03645},
	urldate = {2016-11-02},
	journal = {arXiv preprint arXiv:1609.03645},
	author = {Waldmann, Johannes},
	year = {2016},
	keywords = {automata},
	file = {[PDF] arxiv.org:/Users/doisinkidney/Documents/zotero/storage/RKBMSQIW/Waldmann - 2016 - Efficient Completion of Weighted Automata.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/MHQT2CV3/1609.html:text/html}
}

@article{rivas_notions_2014,
	title = {Notions of {Computation} as {Monoids}},
	url = {http://www.fceia.unr.edu.ar/~mauro/pubs/Notions_of_Computation_as_Monoids.pdf},
	urldate = {2016-11-18},
	journal = {arXiv preprint arXiv:1406.4823},
	author = {Rivas, Exequiel and Jaskelioff, Mauro},
	year = {2014},
	file = {[PDF] unr.edu.ar:/Users/doisinkidney/Documents/zotero/storage/JU7AH2B5/RIVAS and JASKELIOFF - Notions of Computation as Monoids.pdf:application/pdf}
}

@misc{piponi_how_2007,
	title = {How to write tolerably efficient optimzation code without really trying},
	url = {http://blog.sigfpe.com/2007/06/how-to-write-tolerably-efficient.html},
	abstract = {...or the (freely generated module over the (min,+)-semiring)-monad. (But if I used that as a title you probably wouldn't be reading this.) ...},
	language = {en},
	urldate = {2016-12-23},
	journal = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	month = jun,
	year = {2007},
	file = {Snapshot:/Users/doisinkidney/Documents/zotero/storage/UGCATHDW/how-to-write-tolerably-efficient.html:text/html}
}

@inproceedings{kepner_mathematical_2016,
	title = {Mathematical foundations of the {GraphBLAS}},
	url = {https://arxiv.org/pdf/1606.05790.pdf},
	booktitle = {High {Performance} {Extreme} {Computing} {Conference} ({HPEC}), 2016 {IEEE}},
	publisher = {IEEE},
	author = {Kepner, Jeremy and Aaltonen, Peter and Bader, David and Buluç, Aydin and Franchetti, Franz and Gilbert, John and Hutchison, Dylan and Kumar, Manoj and Lumsdaine, Andrew and Meyerhenke, Henning and {others}},
	year = {2016},
	pages = {1--9},
	file = {1606.05790.pdf:/Users/doisinkidney/Documents/zotero/storage/W6QT46EA/1606.05790.pdf:application/pdf}
}

@inproceedings{chakravarty_accelerating_2011,
	title = {Accelerating {Haskell} array codes with multicore {GPUs}},
	url = {http://www.cse.unsw.edu.au/%7Echak/papers/CKLM+11.html},
	booktitle = {{DAMP} '11: {The} 6th workshop on {Declarative} {Aspects} of {Multicore} {Programming}},
	publisher = {ACM},
	author = {Chakravarty, Manuel M T and Keller, Gabriele and Lee, Sean and McDonell, Trevor L and Grover, Vinod},
	month = jan,
	year = {2011},
	file = {acc-cuda.pdf:/Users/doisinkidney/Documents/zotero/storage/7CUADFQN/acc-cuda.pdf:application/pdf}
}

@inproceedings{mcdonell_optimising_2013,
	title = {Optimising {Purely} {Functional} {GPU} {Programs}},
	url = {http://www.cse.unsw.edu.au/%7Echak/papers/MCKL13.html},
	booktitle = {{ICFP} '13: {The} 18th {ACM} {SIGPLAN} {International} {Conference} on {Functional} {Programming}},
	publisher = {ACM},
	author = {McDonell, Trevor L and Chakravarty, Manuel M T and Keller, Gabriele and Lippmeier, Ben},
	month = sep,
	year = {2013},
	file = {acc-optim.pdf:/Users/doisinkidney/Documents/zotero/storage/F5EMEWWK/acc-optim.pdf:application/pdf}
}

@article{abdali_transitive_1985,
	title = {Transitive closure and related semiring properties via eliminants},
	volume = {40},
	url = {http://geomete.com/abdali/papers/TCviaElim.pdf},
	journal = {Theoretical Computer Science},
	author = {Abdali, S Kamal and Saunders, B David},
	year = {1985},
	pages = {257--274},
	file = {TCviaElim.pdf:/Users/doisinkidney/Documents/zotero/storage/Z7IAFXHW/TCviaElim.pdf:application/pdf}
}

@article{lehmann_algebraic_1977,
	title = {Algebraic structures for transitive closure},
	volume = {4},
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.71.7650&rep=rep1&type=pdf},
	number = {1},
	journal = {Theoretical Computer Science},
	author = {Lehmann, Daniel J},
	year = {1977},
	pages = {59--76},
	file = {10.1.1.71.7650.pdf:/Users/doisinkidney/Documents/zotero/storage/92A8249U/10.1.1.71.7650.pdf:application/pdf}
}

@article{arnborg_complexity_1987,
	title = {Complexity of {Finding} {Embeddings} in a k -{Tree}},
	volume = {8},
	issn = {0196-5212, 2168-345X},
	url = {http://www.cs.kuleuven.be/~janr/MiGraNT/arnborg.pdf},
	doi = {10.1137/0608024},
	abstract = {A k-tree is a graph that can be reduced to the k-complete graph by a sequence of removals of a degree k vertex with completely connected neighbors. We address the problem of determining whether a graph is a partial graph of a k-tree. This problem is motivated by the existence of polynomial time algorithms for many combinatorial problems on graphs when the graph is constrained to be a partial k-tree for fixed k. These algorithms have practical applications in areas such as reliability, concurrent broadcasting and evaluation of queries in a relational database system. We determine the complexity status of two problems related to finding the smallest number k such that a given graph is a partial k-tree. First, the corresponding decision problem is NP-complete. Second, for a fixed (predetermined) value of k, we present an algorithm with polynomially bounded (but exponential in k) worst case time complexity. Previously, this problem had only been solved for k = 1,2,3.},
	language = {en},
	number = {2},
	urldate = {2017-02-26},
	journal = {SIAM Journal on Algebraic Discrete Methods},
	author = {Arnborg, Stefan and Corneil, Derek G. and Proskurowski, Andrzej},
	month = apr,
	year = {1987},
	pages = {277--284},
	file = {[PDF] kuleuven.be:/Users/doisinkidney/Documents/zotero/storage/Z7GKEIE6/METH - 1987 - COMPLEXITY OF FINDING EMBEDDINGS IN A k-TREE STEFA.pdf:application/pdf}
}

@article{kschischang_factor_2001,
	title = {Factor graphs and the sum-product algorithm},
	volume = {47},
	url = {http://www.seas.harvard.edu/courses/cs281/papers/frey2001factor.pdf},
	number = {2},
	journal = {IEEE Transactions on information theory},
	author = {Kschischang, Frank R and Frey, Brendan J and Loeliger, H-A},
	year = {2001},
	pages = {498--519},
	file = {frey2001factor.pdf:/Users/doisinkidney/Documents/zotero/storage/C69ZBN2M/frey2001factor.pdf:application/pdf}
}

@article{lehmann_argumentation_2001,
	title = {Argumentation {Systems} and {Belief} {Functions}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.476.8198&rep=rep1&type=pdf},
	urldate = {2017-02-26},
	author = {Lehmann, Norbert},
	year = {2001},
	file = {[PDF] psu.edu:/Users/doisinkidney/Documents/zotero/storage/CAWKAED6/Lehmann - 2001 - Argumentation Systems and Belief Functions.pdf:application/pdf}
}

@phdthesis{baxter_bayesdb:_2014,
	title = {{BayesDB}: querying the probable implications of tabular data},
	shorttitle = {{BayesDB}},
	url = {https://dspace.mit.edu/handle/1721.1/91451},
	urldate = {2017-02-27},
	school = {Massachusetts Institute of Technology},
	author = {Baxter, Jay},
	year = {2014},
	file = {[PDF] mit.edu:/Users/doisinkidney/Documents/zotero/storage/WNG9R5TF/Baxter - 2014 - BayesDB querying the probable implications of tab.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/DHZKDPT4/91451.html:text/html}
}

@inproceedings{claessen_observable_1999,
	title = {Observable sharing for functional circuit description},
	url = {http://www.cse.chalmers.se/~dave/papers/observable-sharing.ps},
	booktitle = {Annual {Asian} {Computing} {Science} {Conference}},
	publisher = {Springer},
	author = {Claessen, Koen and Sands, David},
	year = {1999},
	pages = {62--73},
	file = {c9ee73d9398fd273845a26b3ed79af5ebf29.pdf:/Users/doisinkidney/Documents/zotero/storage/5QQ34B8S/c9ee73d9398fd273845a26b3ed79af5ebf29.pdf:application/pdf}
}

@phdthesis{erkok_value_2002,
	title = {Value recursion in monadic computations},
	url = {http://leventerkok.github.io/papers/erkok-thesis.pdf},
	school = {Oregon Health and Science University},
	author = {Erkök, Levent},
	year = {2002},
	file = {erkok-thesis.pdf:/Users/doisinkidney/Documents/zotero/storage/MSXRHCSA/erkok-thesis.pdf:application/pdf}
}

@inproceedings{reed_distance_2010,
	title = {Distance makes the types grow stronger: a calculus for differential privacy},
	volume = {45},
	shorttitle = {Distance makes the types grow stronger},
	url = {http://dl.acm.org/citation.cfm?id=1863568},
	urldate = {2017-03-01},
	booktitle = {{ACM} {Sigplan} {Notices}},
	publisher = {ACM},
	author = {Reed, Jason and Pierce, Benjamin C.},
	year = {2010},
	pages = {157--168},
	file = {[PDF] upenn.edu:/Users/doisinkidney/Documents/zotero/storage/FU78V8H8/Reed and Pierce - 2010 - Distance makes the types grow stronger a calculus.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/M66WU4PF/citation.html:text/html}
}

@incollection{shenoy_axioms_1990,
	address = {Amsterdam},
	edition = {1st ed},
	series = {Machine intelligence and pattern recognition},
	title = {Axioms for {Probability} and {Belief}-{Function} {Propagation}},
	isbn = {978-0-444-88650-7 978-0-444-88737-5},
	url = {http://glennshafer.com/assets/downloads/articles/article43.pdf},
	language = {eng},
	number = {9},
	urldate = {2017-03-02},
	booktitle = {Uncertainty in {Artificial} {Intelligence} 4},
	publisher = {North-Holland},
	author = {Shenoy, Prakash P. and Shafer, Glenn},
	year = {1990},
	note = {OCLC: 644493075},
	keywords = {Artificial intelligence, Uncertainty (Information theory)},
	file = {[PDF] glennshafer.com:/Users/doisinkidney/Documents/zotero/storage/QKW58J3F/Shenoy and Shafer - Axioms for Probability and Belief-Function Propaga.pdf:application/pdf}
}

@book{kohlas_information_2003,
	address = {London ; New York},
	series = {Discrete mathematics and theoretical computer science},
	title = {Information algebras: generic structures for inference},
	isbn = {978-1-85233-689-9 978-1-4471-0009-6},
	shorttitle = {Information algebras},
	url = {http://link.springer.com/10.1007/978-1-4471-0009-6},
	language = {en},
	publisher = {Springer},
	author = {Kohlas, Jürg},
	year = {2003},
	note = {DOI: 10.1007/978-1-4471-0009-6},
	keywords = {Algebra, Computer science, Information theory, Mathematics}
}

@article{goodman_church:_2012,
	title = {Church: a language for generative models},
	shorttitle = {Church},
	url = {http://arxiv.org/abs/1206.3255},
	abstract = {We introduce Church, a universal language for describing stochastic generative processes. Church is based on the Lisp model of lambda calculus, containing a pure Lisp as its deterministic subset. The semantics of Church is defined in terms of evaluation histories and conditional distributions on such histories. Church also includes a novel language construct, the stochastic memoizer, which enables simple description of many complex non-parametric models. We illustrate language features through several examples, including: a generalized Bayes net in which parameters cluster over trials, infinite PCFGs, planning by inference, and various non-parametric clustering models. Finally, we show how to implement query on any Church program, exactly and approximately, using Monte Carlo techniques.},
	urldate = {2017-03-02},
	journal = {arXiv:1206.3255 [cs]},
	author = {Goodman, Noah and Mansinghka, Vikash and Roy, Daniel M. and Bonawitz, Keith and Tenenbaum, Joshua B.},
	month = jun,
	year = {2012},
	note = {arXiv: 1206.3255},
	keywords = {Computer Science - Artificial Intelligence, Computer Science - Logic in Computer Science, Computer Science - Programming Languages},
	file = {arXiv\:1206.3255 PDF:/Users/doisinkidney/Documents/zotero/storage/HXXNRRQR/Goodman et al. - 2012 - Church a language for generative models.pdf:application/pdf;arXiv.org Snapshot:/Users/doisinkidney/Documents/zotero/storage/R7S7R6H4/1206.html:text/html}
}

@inproceedings{wood_new_2014,
	title = {A {New} {Approach} to {Probabilistic} {Programming} {Inference}},
	booktitle = {Proceedings of the 17th {International} conference on {Artificial} {Intelligence} and {Statistics}},
	author = {Wood, Frank and van de Meent, Jan Willem and Mansinghka, Vikash},
	year = {2014},
	pages = {1024--1032},
	file = {wood-aistats-2014.pdf:/Users/doisinkidney/Documents/zotero/storage/QF2HXCCX/wood-aistats-2014.pdf:application/pdf}
}

@inproceedings{paige_compilation_2014,
	title = {A {Compilation} {Target} for {Probabilistic} {Programming} {Languages}},
	url = {http://jmlr.org/proceedings/papers/v32/paige14.pdf},
	abstract = {Forward inference techniques such as sequential Monte Carlo and particle Markov chain Monte Carlo for probabilistic programming can be implemented in any programming language by creative use of standardized operating system functionality including processes, forking, mutexes, and shared memory. Exploiting this we have defined, developed, and tested a probabilistic programming language intermediate representation language we call probabilistic C, which itself can be compiled to machine code by standard compilers and linked to operating system libraries yielding an efficient, scalable, portable probabilistic programming compilation target. This opens up a new hardware and systems research path for optimizing probabilistic programming systems.},
	booktitle = {Proceedings of {The} 31st {International} {Conference} on {Machine} {Learning}},
	author = {Paige, Brooks and Wood, Frank},
	year = {2014},
	pages = {1935--1943},
	file = {paige14.pdf:/Users/doisinkidney/Documents/zotero/storage/8RPS9GWS/paige14.pdf:application/pdf}
}

@article{avery_codensity_2014,
	title = {Codensity and the {Giry} monad},
	url = {http://arxiv.org/abs/1410.4432},
	abstract = {The Giry monad on the category of measurable spaces sends a space to a space of all probability measures on it. There is also a finitely additive Giry monad in which probability measures are replaced by finitely additive probability measures. We give a characterisation of both finitely and countably additive probability measures in terms of integration operators that is a correction and extension of a result claimed by Sturtz. A counterexample to Sturtz's claim is given in the appendix. This correspondence gives a new description of the Giry monads, which is then used to show that the Giry monads arise as the codensity monads of forgetful functors from certain categories of convex sets and affine maps to the category of measurable spaces.},
	urldate = {2017-03-02},
	journal = {arXiv:1410.4432 [math]},
	author = {Avery, Tom},
	month = oct,
	year = {2014},
	note = {arXiv: 1410.4432},
	keywords = {Mathematics - Category Theory},
	file = {arXiv\:1410.4432 PDF:/Users/doisinkidney/Documents/zotero/storage/7T68E933/Avery - 2014 - Codensity and the Giry monad.pdf:application/pdf;arXiv.org Snapshot:/Users/doisinkidney/Documents/zotero/storage/Z3S5FB3V/1410.html:text/html}
}

@inproceedings{madsen_solving_2001,
	title = {Solving influence diagrams using {HUGIN}, {Shafer}-{Shenoy} and {Lazy} propagation},
	url = {https://pdfs.semanticscholar.org/27d1/544b80f44f9efc4ca8c77925408d759c8b91.pdf},
	abstract = {In this paper we compare three different architectures for the evaluation of influence diagrams: HUGIN, Shafer-Shenoy, and Lazy Evaluation architecture. The computational complexity of the architectures are compared on the LImited Memory Influence Diagram (LIMID): a diagram where only the requiste information for the computation of the optimal policies are depicted. Because the requsite information is explicitly represented in the LIMID the evaluation can take advantage of it, and significant savings in computational can be obtained. In this paper we show how the obtained savings is considerably increased when the computations performed on the LIMID is according to the Lazy Evaluation scheme.},
	booktitle = {Proceedings of the {Seventeenth} conference on {Uncertainty} in artificial intelligence},
	publisher = {Morgan Kaufmann Publishers Inc.},
	author = {Madsen, Anders L and Nilsson, Dennis},
	year = {2001},
	keywords = {Computer Science - Artificial Intelligence},
	pages = {337--345},
	file = {544b80f44f9efc4ca8c77925408d759c8b91.pdf:/Users/doisinkidney/Documents/zotero/storage/CHC7K4HR/544b80f44f9efc4ca8c77925408d759c8b91.pdf:application/pdf}
}

@techreport{sussman_art_2009,
	type = {Technical {Report}},
	title = {The {Art} of the {Propagator}},
	copyright = {http://creativecommons.org/licenses/by-sa/3.0/},
	url = {http://dspace.mit.edu/handle/1721.1/44215},
	abstract = {We develop a programming model built on the idea that the basic computational elements are autonomous machines interconnected by shared cells through which they communicate. Each machine continuously examines the cells it is interested in, and adds information to some based on deductions it can make from information from the others. This model makes it easy to smoothly combine expression-oriented and constraint-based programming; it also easily accommodates implicit incremental distributed search in ordinary programs.  This work builds on the original research of Guy Lewis Steele Jr. and was developed more recently with the help of Chris Hanson.},
	language = {en},
	number = {MIT-CSAIL-TR-2009-002},
	urldate = {2017-03-03},
	institution = {Massachusetts Institute of Technology},
	author = {Sussman, Gerald Jay and Radul, Alexey},
	month = jan,
	year = {2009},
	file = {MIT-CSAIL-TR-2009-002.pdf:/Users/doisinkidney/Documents/zotero/storage/XXS39VQ3/MIT-CSAIL-TR-2009-002.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/GQH44JRW/44215.html:text/html}
}

@article{floyd_algorithm_1962,
	title = {Algorithm 97: {Shortest} {Path}},
	volume = {5},
	issn = {0001-0782},
	shorttitle = {Algorithm 97},
	url = {http://doi.acm.org/10.1145/367766.368168},
	doi = {10.1145/367766.368168},
	number = {6},
	urldate = {2017-03-03},
	journal = {Commun. ACM},
	author = {Floyd, Robert W.},
	month = jun,
	year = {1962},
	pages = {345--},
	file = {floyd1962.pdf:/Users/doisinkidney/Documents/zotero/storage/U7WTBEIH/floyd1962.pdf:application/pdf}
}

@incollection{dold_categorical_1982,
	address = {Berlin, Heidelberg},
	title = {A categorical approach to probability theory},
	volume = {915},
	isbn = {978-3-540-11211-2 978-3-540-39041-1},
	url = {http://link.springer.com/10.1007/BFb0092872},
	urldate = {2017-03-03},
	booktitle = {Categorical {Aspects} of {Topology} and {Analysis}},
	publisher = {Springer Berlin Heidelberg},
	author = {Giry, Michèle},
	editor = {Dold, A. and Eckmann, B. and Banaschewski, B.},
	year = {1982},
	note = {DOI: 10.1007/BFb0092872},
	pages = {68--85},
	file = {giry1982.pdf:/Users/doisinkidney/Documents/zotero/storage/N7WJCNMA/giry1982.pdf:application/pdf}
}

@inproceedings{dwork_differential_2006,
	address = {Venice, Italy},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Differential {Privacy}},
	volume = {4052},
	copyright = {©2006 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-540-35907-4 978-3-540-35908-1},
	url = {https://www.microsoft.com/en-us/research/publication/differential-privacy/},
	doi = {10.1007/11787006_1},
	abstract = {In 1977 Dalenius articulated a desideratum for statistical databases: nothing about an individual should be learnable from the database that cannot be learned without access to the database. We give a general impossibility result showing that a formalization of Dalenius’ goal along the lines of semantic security cannot be achieved. Contrary to intuition, a variant of the result threatens the privacy even of someone not in the database. This state of affairs suggests a new measure, differential privacy, which, intuitively, captures the increased risk to one’s privacy incurred by participating in a database. The techniques developed in a sequence of papers [8, 13, 3], culminating in those described in [12], can achieve any desired level of privacy under this measure. In many cases, extremely accurate information about the database can be provided while simultaneously ensuring very high levels of privacy.},
	language = {en},
	urldate = {2017-03-03},
	booktitle = {33rd {International} {Colloquium} on {Automata}, {Languages} and {Programming}, part {II} ({ICALP} 2006)},
	publisher = {Springer Verlag},
	author = {Dwork, Cynthia},
	editor = {Bugliesi, Michele and Preneel, Bart and Sassone, Vladimiro and Wegener, Ingo},
	month = jul,
	year = {2006},
	keywords = {Data Structures, Discrete Mathematics in Computer Science, Numeric Computing, Programming Techniques, Software Engineering/Programming and Operating Systems, Theory of Computation},
	pages = {1--12},
	file = {dwork.pdf:/Users/doisinkidney/Documents/zotero/storage/EE8TZ2UQ/dwork.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/MRNBSBIZ/10.html:text/html}
}

@inproceedings{marlow_desugaring_2016,
	title = {Desugaring {Haskell}'s do-notation {Into} {Applicative} {Operations}},
	url = {https://www.microsoft.com/en-us/research/publication/desugaring-haskells-do-notation-into-applicative-operations/},
	abstract = {Monads have taken the world by storm, and are supported by do-notation (at least in Haskell). Programmers are increasingly waking up to the usefulness and ubiquity of Applicatives, but they have so far been hampered by the absence of supporting notation. In this paper we show how to re-use the very same do-notation to work for Applicatives as well, providing efficiency benefits for some types that are both Monad and Applicative, and syntactic convenience for those that are merely Applicative. The result is fully implemented in GHC, and is in use at Facebook to make it easy to write highly-parallel queries in a distributed system.},
	author = {Marlow, Simon and Peyton Jones, Simon and Kmett, Edward and Mokhov, Andrey},
	month = sep,
	year = {2016},
	file = {desugaring-haskell-haskell16.pdf:/Users/doisinkidney/Documents/zotero/storage/9GBMQHNZ/desugaring-haskell-haskell16.pdf:application/pdf}
}

@article{belle_semiring_2016,
	title = {Semiring {Programming}: {A} {Framework} for {Search}, {Inference} and {Learning}},
	shorttitle = {Semiring {Programming}},
	url = {http://arxiv.org/abs/1609.06954},
	abstract = {To solve hard problems, AI relies on a variety of disciplines such as logic, probabilistic reasoning, machine learning and mathematical programming. Although it is widely accepted that solving real-world problems requires an integration amongst these, contemporary representation methodologies offer little support for this. In an attempt to alleviate this situation, we introduce a new declarative programming framework that provides abstractions of well-known problems such as SAT, Bayesian inference, generative models, and convex optimization. The semantics of programs is defined in terms of first-order structures with semiring labels, which allows us to freely combine and integrate problems from different AI disciplines.},
	urldate = {2017-03-04},
	journal = {arXiv:1609.06954 [cs]},
	author = {Belle, Vaishak and De Raedt, Luc},
	month = sep,
	year = {2016},
	note = {arXiv: 1609.06954},
	keywords = {Computer Science - Artificial Intelligence, Computer Science - Learning, Computer Science - Logic in Computer Science},
	file = {arXiv\:1609.06954 PDF:/Users/doisinkidney/Documents/zotero/storage/RRWEF746/Belle and De Raedt - 2016 - Semiring Programming A Framework for Search, Infe.pdf:application/pdf;arXiv.org Snapshot:/Users/doisinkidney/Documents/zotero/storage/TMCZHGRA/1609.html:text/html}
}

@inproceedings{scibior_practical_2015,
	address = {New York, NY, USA},
	series = {Haskell '15},
	title = {Practical {Probabilistic} {Programming} with {Monads}},
	volume = {50},
	isbn = {978-1-4503-3808-0},
	url = {http://mlg.eng.cam.ac.uk/pub/pdf/SciGhaGor15.pdf},
	doi = {10.1145/2804302.2804317},
	abstract = {The machine learning community has recently shown a lot of interest in practical probabilistic programming systems that target the problem of Bayesian inference. Such systems come in different forms, but they all express probabilistic models as computational processes using syntax resembling programming languages. In the functional programming community monads are known to offer a convenient and elegant abstraction for programming with probability distributions, but their use is often limited to very simple inference problems. We show that it is possible to use the monad abstraction to construct probabilistic models for machine learning, while still offering good performance of inference in challenging models. We use a GADT as an underlying representation of a probability distribution and apply Sequential Monte Carlo-based methods to achieve efficient inference. We define a formal semantics via measure theory. We demonstrate a clean and elegant implementation that achieves performance comparable with Anglican, a state-of-the-art probabilistic programming system.},
	urldate = {2017-03-06},
	booktitle = {Proceedings of the 2015 {ACM} {SIGPLAN} {Symposium} on {Haskell}},
	publisher = {ACM},
	author = {Ścibior, Adam and Ghahramani, Zoubin and Gordon, Andrew D.},
	year = {2015},
	keywords = {Bayesian statistics, HASKELL, monads, Monte Carlo, probabilistic programming},
	pages = {165--176},
	file = {ACM Full Text PDF:/Users/doisinkidney/Documents/zotero/storage/ATQ694MM/Ścibior et al. - 2015 - Practical Probabilistic Programming with Monads.pdf:application/pdf}
}

@inproceedings{sculthorpe_constrained-monad_2013,
	address = {New York, NY, USA},
	series = {{ICFP} '13},
	title = {The {Constrained}-monad {Problem}},
	isbn = {978-1-4503-2326-0},
	url = {http://ku-fpg.github.io/files/Sculthorpe-13-ConstrainedMonad.pdf},
	doi = {10.1145/2500365.2500602},
	abstract = {In Haskell, there are many data types that would form monads were it not for the presence of type-class constraints on the operations on that data type. This is a frustrating problem in practice, because there is a considerable amount of support and infrastructure for monads that these data types cannot use. Using several examples, we show that a monadic computation can be restructured into a normal form such that the standard monad class can be used. The technique is not specific to monads, and we show how it can also be applied to other structures, such as applicative functors. One significant use case for this technique is domain-specific languages, where it is often desirable to compile a deep embedding of a computation to some other language, which requires restricting the types that can appear in that computation.},
	urldate = {2017-03-08},
	booktitle = {Proceedings of the 18th {ACM} {SIGPLAN} {International} {Conference} on {Functional} {Programming}},
	publisher = {ACM},
	author = {Sculthorpe, Neil and Bracker, Jan and Giorgidze, George and Gill, Andy},
	year = {2013},
	keywords = {class constraints, class constraints, deep embeddings, deep embeddings, HASKELL, Haskell, monads, monads},
	pages = {287--298},
	file = {Sculthorpe-13-ConstrainedMonad.pdf:/Users/doisinkidney/Documents/zotero/storage/BDMH52BD/Sculthorpe-13-ConstrainedMonad.pdf:application/pdf}
}

@article{henglein_generic_2010,
	title = {Generic multiset programming with discrimination-based joins and symbolic {Cartesian} products},
	volume = {23},
	issn = {1388-3690, 1573-0557},
	url = {https://www.cs.ox.ac.uk/projects/utgp/school/henglein2010d.pdf},
	doi = {10.1007/s10990-011-9078-8},
	abstract = {This paper presents GMP, a library for generic, SQL-style programming with multisets. It generalizes the querying core of SQL in a number of ways: Multisets may contain elements of arbitrary first-order data types, including references (pointers), recur- sive data types and nested multisets; it contains an expressive embedded domain-specific language for specifying user-definable equivalence and ordering relations, extending the built-in equality and inequality predicates; it admits mapping arbitrary functions over mul- tisets, not just projections; it supports user-defined predicates in selections; and it allows user-defined aggregation functions.
Most significantly, it avoids many cases of asymptotically inefficient nested iteration through Cartesian products that occur in a straightforward stream-based implementation of multisets. It accomplishes this by employing two novel techniques: symbolic (term) repre- sentations of multisets, specifically for Cartesian products, for facilitating dynamic symbolic computation, which intersperses algebraic simplification steps with conventional data pro- cessing; and discrimination-based joins, a generic technique for computing equijoins based on equivalence discriminators, as an alternative to hash-based and sort-merge joins.
Full source code for GMP in Haskell, which is based on generic top-down discrimina- tion (not included), is included for experimentation. We provide illustrative examples whose performance indicates that GMP, even without requisite algorithm and data structure engi- neering, is a realistic alternative to SQL even for SQL-expressible queries.},
	language = {en},
	number = {3},
	urldate = {2017-03-27},
	journal = {Higher-Order and Symbolic Computation},
	author = {Henglein, Fritz and Larsen, Ken Friis},
	month = sep,
	year = {2010},
	pages = {337--370},
	file = {[PDF] ox.ac.uk:/Users/doisinkidney/Documents/zotero/storage/RKG5EUND/Henglein and Larsen - 2011 - Generic multiset programming with discrimination-b.pdf:application/pdf}
}

@article{henglein_generic_2012,
	title = {Generic top-down discrimination for sorting and partitioning in linear time},
	volume = {22},
	issn = {0956-7968, 1469-7653},
	url = {https://www.cs.ox.ac.uk/projects/utgp/school/henglein2012c.pdf},
	doi = {10.1017/S0956796812000160},
	language = {en},
	number = {03},
	urldate = {2017-03-27},
	journal = {Journal of Functional Programming},
	author = {Henglein, Fritz},
	month = may,
	year = {2012},
	pages = {300--374},
	file = {[PDF] ox.ac.uk:/Users/doisinkidney/Documents/zotero/storage/JRT9HH7C/HENGLEIN - Generic top-down discrimination for sorting and pa.pdf:application/pdf}
}

@article{haenni_ordered_2004,
	title = {Ordered valuation algebras: a generic framework for approximating inference},
	volume = {37},
	issn = {0888-613X},
	shorttitle = {Ordered valuation algebras},
	url = {http://www.sciencedirect.com/science/article/pii/S0888613X03001476},
	doi = {10.1016/j.ijar.2003.10.009},
	abstract = {The paper presents a generic approach of approximating inference. The method is based on the concept of valuation algebras with its wide range of possible applications in many different domains. We present convenient resource-bounded anytime algorithms, where the maximal time of computation is determined by the user.},
	number = {1},
	urldate = {2017-03-28},
	journal = {International Journal of Approximate Reasoning},
	author = {Haenni, Rolf},
	month = aug,
	year = {2004},
	keywords = {Anytime algorithms, Approximation, Binary join trees, Bucket elimination, Local computation, Mini-buckets, Resource-bounded computation, Valuation algebras},
	pages = {1--41},
	file = {ScienceDirect Full Text PDF:/Users/doisinkidney/Documents/zotero/storage/AH2XENZQ/Haenni - 2004 - Ordered valuation algebras a generic framework fo.pdf:application/pdf;ScienceDirect Snapshot:/Users/doisinkidney/Documents/zotero/storage/U4NAUTDT/S0888613X03001476.html:text/html}
}

@book{shachter_uncertainty_1990,
	address = {Amsterdam},
	edition = {1st ed},
	series = {Machine intelligence and pattern recognition},
	title = {Uncertainty in artificial intelligence 4},
	isbn = {978-0-444-88650-7 978-0-444-88737-5},
	language = {eng},
	number = {9},
	publisher = {North-Holland},
	editor = {Shachter, Ross D.},
	year = {1990},
	note = {OCLC: 644493075},
	keywords = {Artificial intelligence, Uncertainty (Information theory)}
}

@incollection{kohlas_computation_2000,
	series = {Handbook of {Defeasible} {Reasoning} and {Uncertainty} {Management} {Systems}},
	title = {Computation in {Valuation} {Algebras}},
	copyright = {©2000 Springer Science+Business Media Dordrecht},
	isbn = {978-90-481-5603-0 978-94-017-1737-3},
	url = {https://www.researchgate.net/profile/Prakash_Shenoy/publication/2846681_Computation_in_Valuation_Algebras/links/09e41510982ec35920000000.pdf},
	abstract = {The main goal of this chapter is to describe an abstract framework called valuation algebra for computing marginals using local computation. The valuation algebra framework is useful in many domains, and especially for managing uncertainty in expert systems using probability, Dempster-Shafer belief functions, Spohnian epistemic belief theory, and possibility theory.},
	language = {en},
	number = {5},
	urldate = {2017-03-28},
	booktitle = {Handbook of {Defeasible} {Reasoning} and {Uncertainty} {Management} {Systems}},
	publisher = {Springer Netherlands},
	author = {Kohlas, Jürg and Shenoy, Prakash P.},
	editor = {Kohlas, Jürg and Moral, Serafín},
	year = {2000},
	note = {DOI: 10.1007/978-94-017-1737-3\_2},
	keywords = {Artificial Intelligence (incl. Robotics), Logic, Mathematical Logic and Foundations, Programming Languages, Compilers, Interpreters, Theory of Computation},
	pages = {5--39},
	file = {download.pdf:/Users/doisinkidney/Documents/zotero/storage/A8IAQV8Z/download.pdf:application/pdf}
}

@article{kohlas_semiring_2008,
	title = {Semiring {Induced} {Valuation} {Algebras}: {Exact} and {Approximate} {Local} {Computation} {Algorithms}},
	volume = {172},
	issn = {0004-3702},
	shorttitle = {Semiring {Induced} {Valuation} {Algebras}},
	url = {http://4c.ucc.ie/web/upload/publications/jourart/Kohlas_Wilson_aij.pdf},
	doi = {10.1016/j.artint.2008.03.003},
	abstract = {Local computation in join trees or acyclic hypertrees has been shown to be linked to a particular algebraic structure, called valuation algebra. There are many models of this algebraic structure ranging from probability theory to numerical analysis, relational databases and various classical and non-classical logics. It turns out that many interesting models of valuation algebras may be derived from semiring valued mappings. In this paper we study how valuation algebras are induced by semirings and how the structure of the valuation algebra is related to the algebraic structure of the semiring. In particular, c-semirings with idempotent multiplication induce idempotent valuation algebras and therefore permit particularly efficient architectures for local computation. Also important are semirings whose multiplicative semigroup is embedded in a union of groups. They induce valuation algebras with a partially defined division. For these valuation algebras, the well-known architectures for Bayesian networks apply. We also extend the general computational framework to allow derivation of bounds and approximations, for when exact computation is not feasible.},
	number = {11},
	urldate = {2017-03-28},
	journal = {Artificial Intelligence},
	author = {Kohlas, Juerg and Wilson, Nic},
	month = jul,
	year = {2008},
	keywords = {Join tree decompositions, Local computation, Semirings, Soft constraints, Uncertainty, Valuation algebras, Valuation networks},
	pages = {1360--1399},
	file = {[PDF] ucc.ie:/Users/doisinkidney/Documents/zotero/storage/RXZXM9GX/Kohlasa and Wilsonb - 2008 - Semiring induced valuation algebras Exact and app.pdf:application/pdf}
}

@article{pouly_nenok_2010,
	title = {Nenok — a software architecture for generic inference},
	volume = {19},
	issn = {0218-2130},
	url = {https://pdfs.semanticscholar.org/5293/6aa092bda3286877ee7e5ae214974987f749.pdf},
	doi = {10.1142/S0218213010000042},
	abstract = {Computing inference from a given knowledgebase is one of the key competences of computer science. Therefore, numerous formalisms and specialized inference routines have been introduced and implemented for this task. Typical examples are Bayesian networks, constraint systems or different kinds of logic. It is known today that these formalisms can be unified under a common algebraic roof called valuation algebra. Based on this system, generic inference algorithms for the processing of arbitrary valuation algebras can be defined. Researchers benefit from this high level of abstraction to address open problems independently of the underlying formalism. It is therefore all the more astonishing that this theory did not find its way into concrete software projects. Indeed, all modern programming languages for example provide generic sorting procedures, but generic inference algorithms are still mythical creatures. NENOK breaks a new ground and offers an extensive library of generic inference tools based on the valuation algebra framework. All methods are implemented as distributed algorithms that process local and remote knowledgebases in a transparent manner. Besides its main purpose as software library, NENOK also provides a sophisticated graphical user interface to inspect the inference process and the involved graphical structures. This can be used for educational purposes but also as a fast prototyping architecture for inference formalisms.},
	language = {en},
	number = {01},
	urldate = {2017-03-28},
	journal = {International Journal on Artificial Intelligence Tools},
	author = {Pouly, Marc},
	month = feb,
	year = {2010},
	pages = {65--99},
	file = {6aa092bda3286877ee7e5ae214974987f749.pdf:/Users/doisinkidney/Documents/zotero/storage/KGBVM4WI/6aa092bda3286877ee7e5ae214974987f749.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/QNG7WXAK/S0218213010000042.html:text/html}
}

@incollection{gibbons_comprehending_2016,
	address = {Cham},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Comprehending {Ringads}},
	volume = {9600},
	copyright = {©2016 Springer International Publishing Switzerland},
	isbn = {978-3-319-30935-4 978-3-319-30936-1},
	url = {http://www.cs.ox.ac.uk/jeremy.gibbons/publications/ringads.pdf},
	abstract = {List comprehensions are a widely used programming construct, in languages such as Haskell and Python and in technologies such as Microsoft’s Language Integrated Query. They generalize from lists to arbitrary monads, yielding a lightweight idiom of imperative programming in a pure functional language. When the monad has the additional structure of a so-called ringad, corresponding to ‘empty’ and ‘union’ operations, then it can be seen as some kind of collection type, and the comprehension notation can also be extended to incorporate aggregations. Ringad comprehensions represent a convenient notation for expressing database queries. The ringad structure alone does not provide a good explanation or an efficient implementation of relational joins; but by allowing heterogeneous comprehensions, involving both bag and indexed table ringads, we show how to accommodate these too.},
	language = {en},
	number = {9600},
	urldate = {2017-03-29},
	booktitle = {A {List} of {Successes} {That} {Can} {Change} the {World}},
	publisher = {Springer International Publishing},
	author = {Gibbons, Jeremy},
	editor = {Lindley, Sam and McBride, Conor and Trinder, Phil and Sannella, Don},
	year = {2016},
	note = {DOI: 10.1007/978-3-319-30936-1\_7},
	keywords = {Logics and Meanings of Programs, Mathematical Logic and Formal Languages, Programming Languages, Compilers, Interpreters, Programming Techniques, Software Engineering},
	pages = {132--151},
	file = {ringads.pdf:/Users/doisinkidney/Documents/zotero/storage/S6KTZRQX/ringads.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/89HXZWDD/uuid1dc006fd-8896-4979-b3ad-45bc542ea8f0.html:text/html;Snapshot:/Users/doisinkidney/Documents/zotero/storage/J39JRBWE/10.html:text/html}
}

@inproceedings{jensen_optimal_1994,
	address = {San Francisco, CA, USA},
	series = {{UAI}'94},
	title = {Optimal {Junction} {Trees}},
	isbn = {978-1-55860-332-5},
	url = {http://dl.acm.org/citation.cfm?id=2074394.2074440},
	abstract = {The paper deals with optimality issues in connection with updating beliefs in networks. We address two processes: triangulation and construction of junction trees. In the first part, we give a simple algorithm for constructing an optimal junction tree from a triangulated network. In the second part, we argue that any exact method based on local calcuIations must either be less efficient than the junction tree method, or it has an optimality problem equivalent to that of triangulation.},
	urldate = {2017-04-01},
	booktitle = {Proceedings of the {Tenth} {International} {Conference} on {Uncertainty} in {Artificial} {Intelligence}},
	publisher = {Morgan Kaufmann Publishers Inc.},
	author = {Jensen, Finn V. and Jensen, Frank},
	year = {1994},
	pages = {360--366}
}

@article{claessen_quickcheck:_2011,
	title = {{QuickCheck}: {A} {Lightweight} {Tool} for {Random} {Testing} of {Haskell} {Programs}},
	volume = {46},
	issn = {0362-1340},
	shorttitle = {{QuickCheck}},
	url = {https://pdfs.semanticscholar.org/f8a3/f613080f69d4d3e005f0133c64d44a5bb902.pdf},
	doi = {10.1145/1988042.1988046},
	abstract = {QuickCheck is a tool which aids the Haskell programmer in formulating and testing properties of programs. Properties are discribed as Haskell functions, and can be automatically tested on random input, but it is also possible to define custom test data generators. We present a number of case studies, in which the tool was successfully used, and also point out some pitfalls to avoid. Random testing is especially suitable for functional programs because properties can be stated at a fine grain. When a function is built from separately tested components, then random testing suffuces to obtain good coverage of the definition under test.},
	number = {4},
	urldate = {2017-06-28},
	journal = {SIGPLAN Not.},
	author = {Claessen, Koen and Hughes, John},
	month = may,
	year = {2011},
	pages = {53--64},
	file = {f613080f69d4d3e005f0133c64d44a5bb902.pdf:/Users/doisinkidney/Documents/zotero/storage/2CXEEKFA/f613080f69d4d3e005f0133c64d44a5bb902.pdf:application/pdf}
}

@article{mcilroy_power_1999,
	title = {Power {Series}, {Power} {Serious}},
	volume = {9},
	issn = {0956-7968},
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.333.3156&rep=rep1&type=pdf},
	doi = {10.1017/S0956796899003299},
	abstract = {Power series and stream processing were made for each other. Stream algorithms for power series are short, sweet, and compositional. Their neatness shines through in Haskell, thanks to pattern-matching, lazy lists, and operator overloading. In a short compass one can build working code from ground zero (scalar operations) up to exact calculation of generating functions and solutions of differential equations.},
	number = {3},
	urldate = {2017-10-09},
	journal = {J. Funct. Program.},
	author = {McIlroy, M. Douglas},
	month = may,
	year = {1999},
	pages = {325--337},
	file = {10.1.1.333.3156.pdf:/Users/doisinkidney/Documents/zotero/storage/7TKC675W/10.1.1.333.3156.pdf:application/pdf}
}

@incollection{spivey_combinators_2003,
	series = {Cornerstones in {Computing}},
	title = {Combinators for logic programming},
	url = {https://www.cs.ox.ac.uk/publications/books/fop/dist/fop/chapters/9/Logic.hs},
	booktitle = {The {Fun} of {Programming}},
	publisher = {Palgrave},
	author = {Spivey, J. Michael and Seres, Silvija},
	month = mar,
	year = {2003},
	file = {Logic.hs:/Users/doisinkidney/Documents/zotero/storage/QVIRPZJZ/Logic.hs:text/plain}
}

@article{spivey_algebras_2009,
	title = {Algebras for combinatorial search},
	volume = {19},
	issn = {1469-7653, 0956-7968},
	url = {https://pdfs.semanticscholar.org/db3e/373bb6e7e7837ebc524da0a25903958554ed.pdf},
	doi = {10.1017/S0956796809007321},
	abstract = {AbstractCombinatorial search strategies including depth-first, breadth-first and depth-bounded search are shown to be different implementations of a common algebraic specification that emphasizes the compositionality of the strategies. This specification is placed in a categorical setting that combines algebraic specifications and monads.},
	number = {3-4},
	urldate = {2017-10-13},
	journal = {Journal of Functional Programming},
	author = {Spivey, J. Michael},
	month = jul,
	year = {2009},
	pages = {469--487},
	file = {373bb6e7e7837ebc524da0a25903958554ed.pdf:/Users/doisinkidney/Documents/zotero/storage/RJBV6ADB/373bb6e7e7837ebc524da0a25903958554ed.pdf:application/pdf;Snapshot:/Users/doisinkidney/Documents/zotero/storage/HVBMPBM2/AB57FF99CEA76C1C31A336B560D6FD3C.html:text/html}
}